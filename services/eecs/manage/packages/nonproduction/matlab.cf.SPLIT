##############################################################################
#
#   manage/packages/matlab.cf - EECS manual installer for matlab
#   Maintained: Ben Roose, ver 0.1
#
###############################################################################

# TESTING ONLY:INPUT STANDARD LIBRARY (Remove after testing)
body file control
{
      inputs => { "$(sys.libdir)/stdlib.cf" };
}

######################################################################
# Public entry point: install_matlab bundle
######################################################################

# NOTES for future development of configuration:
# 1. Figure out how to auto integrate research vs. classroom licensing (using classes)
# 2. Write a bundle for removal of matlab: check if installed in installed_matlab (if installed and want removed, then delete directory /opt/matlab and /usr/local/bin/mtlab symlink to "repair state")

bundle agent install_matlab
{
  # @decription: manual installer for matlab including a fully silent install

  vars:
      # intial variables for testing if matlab is installed
      #(NOTE: this bundle needs adjusting if we wish these variables to override what is in the matlab_vars bundle!
      "matlab_dir" string =>"/opt/matlab/";     
      "executable_link" string =>"/usr/local/bin/matlab";

  classes: 
      "matlab_dir_is_present"
      expression => fileexists("$(matlab_dir)");
      "executable_link_is_present"
        expression => fileexists("$(executable_link)");

  reports:
    (inform_mode|verbose_mode)::
      "$(this.bundle): Activated";

    (DEBUG|DEBUG_install_matlab)::

    (DEBUG|DEBUG_install_matlab).matlab_dir_is_present.executable_link_is_present::
      "$(this.bundle): already installed.";


  methods:
    !matlab_dir_is_present|!executable_link_is_present::
      "matlab_vars"  usebundle => matlab_vars;
      "matlab_pkgs"  usebundle => matlab_packages_installed("matlab_vars.conf");
      "matlab_tar"   usebundle => matlab_tarball_is_present("matlab_vars.conf");
      "matlab_install" usebundle => matlab_is_installed("matlab_vars.conf");
#      "matlab_tidy" usebundle => matlab_tidy("matlab_vars.conf");
}

#############################################

bundle agent matlab_vars(params)   
{
  vars:
  
      # Default configuration values. Internal parameters start with _
      "conf[_matlab_dir]" string =>"/opt/matlab/",
        policy => "overridable";
      "conf[_executable_binary]" string =>"bin/matlab",
        policy => "overridable";
      "conf[_executable_link]" string =>"/usr/local/bin/matlab",
        policy => "overridable";
      "conf[_download_server]"  string => "$(sys.policy_hub)",
        policy => "overridable";
      "conf[_download_file_1]"  string => "/srv/cfengine/packages/matlab_installer_partial1.tar.bz2",
        policy => "overridable";
      "conf[_download_file_2]"  string => "/srv/cfengine/packages/matlab_installer_partial2.tar.bz2",
        policy => "overridable";
      "conf[_tarball_1]"      string => "matlab_installer_partial1.tar.bz2",
        policy => "overridable";
      "conf[_tarball_2]"      string => "matlab_installer_partial2.tar.bz2",
        policy => "overridable";
      "conf[_install_dir]"  string => "/root/",
        policy => "overridable";
      "conf[_unrolled_dir]"  string => "$(conf[_install_dir])matlab2015_installer/",
        policy => "overridable";
      "conf[_template_file]" string => "$(this.promise_dirname)/matlab_installer_template.txt",
        policy => "overridable";
      "conf[_installer_file]" string => "installer.txt",
        policy => "overridable";
      "conf[_log_file]"    string => "/var/log/matlab_install.log",
        policy => "overridable";
      "conf[_desktop_icon_file]" string =>"matlab.png",
        policy => "overridable";
      "conf[_desktop_file_install_location]" string =>"/usr/share/applications/matlab.desktop",
        policy => "overridable";     
      "conf[_desktop_icon_install_location]" string =>"/usr/share/pixmaps/matlab.png",
        policy => "overridable";     

    matlab_research::
      "conf[_license_key]" string =>"34128-40921-39156-38420-24841-17749-28780-12545-16055-45535-20492";
      "conf[_license_file]" string =>"$(conf[_unrolled_dir])license_research/license.dat";
      "conf[_desktop_file]" string =>"matlab-r.desktop";
      
    matlab_classroom::
      "conf[_license_key]" string =>"30975-39490-53803-34518-40127";
      "conf[_license_file]" string =>"$(conf[_unrolled_dir])/license_classroom/license.dat";
      "conf[_desktop_file]" string =>"matlab-c.desktop";

    any::   
      # Copy configuration parameters passed, into a local array
      "param_keys"          slist  => getindices("$(params)");   
      "conf[$(param_keys)]" string => "$($(params)[$(param_keys)])",
        policy => "overridable";
}

bundle agent matlab_report_params(params)
{
  vars:
      "keys" slist => getindices("$(params)");
  reports:
    cfengine_3::
      "$(keys) = $($(params)[$(keys)])";
}

bundle agent matlab_packages_installed(params)
{
  vars:
    debian::  
      "desired_package" slist => { 
				   "default-jre",
				   "tar",
      };
    redhat::
      "desired_package" slist => {
	# ??
      };
  packages:  
      "$(desired_package)"
        policy => "present",
        package_module => apt_get,
        version => "latest",
        comment => "MatLab depends on Java Runtime";
}

#############################################

bundle agent matlab_tarball_is_present(params)
{
  classes: 
      "matlab_tarballs_are_present"
        and => { fileexists("$($(params)[_install_dir])$($(params)[_tarball_1])"), fileexists("$($(params)[_install_dir])$($(params)[_tarball_2])") };

      "matlab_src_dir_is_present"
        expression => fileexists("$($(params)[_unrolled_dir])");

  files: 
    !matlab_tarballs_are_present::
      "$($(params)[_install_dir])$($(params)[_tarball_1])"
        copy_from => remote_cp("$($(params)[_download_file_1])", "$($(params)[_download_server])"),
        comment => "Copying MatLab installer file 1 from source server.";

      "$($(params)[_install_dir])$($(params)[_tarball_2])"
        copy_from => remote_cp("$($(params)[_download_file_2])", "$($(params)[_download_server])"),
        comment => "Copying MatLab installer file 2 from source server.";

  commands:
    matlab_tarballs_are_present.!matlab_src_dir_is_present::
      "/bin/tar -xvjf $($(params)[_tarball_1])"
        contain => in_dir_shell("$($(params)[_install_dir])"),
        comment => "Unrolling matlab installer tarball to $($(params)[_install_dir])";

      "/bin/tar -xvjf $($(params)[_tarball_2] $($(params)[_unrolled_dir])archives/)"
        contain => in_dir_shell("$($(params)[_install_dir])"),
        comment => "Unrolling matlab installer tarball to $($(params)[_install_dir])";

  reports:
    DEBUG.matlab_tarballs_are_present::
      "MatLab tarballs are on disk.";

    DEBUG.matlab_src_dir_is_present::
      "MatLab unrolled/untarred directory is present.";
}

#############################################

bundle agent matlab_is_installed(params)
{
  classes:
      "matlab_src_dir_is_present"
        expression => fileexists("$($(params)[_unrolled_dir])archives/common");

      "matlab_installer_file_exists"  
        expression => fileexists("$($(params)[_unrolled_dir])$($(params)[_installer_file])");

      "matlab_dir_is_present"
        expression => fileexists("$($(params)[_matlab_dir])");

      "matlab_executable_exists"  
        expression => fileexists("$($(params)[_unrolled_dir])$($(params)[_executable_binary])");
      
      "executable_link_exists"
        expression => fileexists("$($(params)[_executable_link])");


  files:
    matlab_src_dir_is_present.!matlab_installer_file_exists::  
      "$($(params)[_unrolled_dir])$($(params)[_installer_file])"
        handle => "set_installer_file",
        create => "true",
        perms => mog ("644", "root", "root"),
        edit_defaults => empty,
        edit_line => expand_template("$($(params)[_template_file])"),
        comment => "Expand non-interactive matlab installer file with correct parameters into [unrolled_dir]";

    matlab_src_dir_is_present.matlab_executable_exists.executable_link_exists::
      "$($(params)[_executable_link])"
      perms => mog("755", "root", "root"),
      comment => "make sure the executable binary file can be run by all users";

      "$($(params)[_desktop_file_install_location])"
      copy_from => local_cp("$($(params)[_unrolled_dir])$($(params)[_desktop_file])"),
      perms => mog("644", "root", "root"),
      comment => "copy the desktop file into the system's applications directory for GUI users";

      "$($(params)[_desktop_icon_install_location])"
      copy_from => local_cp("$($(params)[_unrolled_dir])$($(params)[_desktop_icon_file])"),
      perms => mog("644", "root", "root"),
      comment => "copy the desktop icon file into the system's pixmaps directory for GUI users";

  commands:
    (matlab_src_dir_is_present.matlab_installer_file_exists).(!matlab_dir_is_present.!executable_link_exists):: 
      "./install -inputFile $($(params)[_installer_file])"
      contain => in_dir_shell("$($(params)[_unrolled_dir])"),
      comment => "non-interactively installing matlab to $($(params)[_matlab_dir]).";

    matlab_executable_exists.!executable_link_exists:: 
      "/bin/ln -s $($(params)[_matlab_dir])$($(params)[_executable_binary]) $($(params)[_executable_link])"
        comment => "creating a matlab binary symlink at $($(params)[_executable_link]).";

  reports:
    DEBUG.matlab_installer_file_exists::
      "MatLab installer file $($(params)[_installer_file]) is present";

    DEBUG.!matlab_installer_file_exists::
      "MatLab installer file $($(params)[_installer_file]) is not present";

    DEBUG.matlab_dir_is_present.executable_link_exists::
      "MatLab directory and $($(params)[_executable_link]) are present.";

}

#############################################

bundle agent matlab_tidy(params)
{
  classes:
      "matlab_install_dir_exists"  
        expression => fileexists("$($(params)[_unrolled_dir])");

      "matlab_tarball_exists"
        expression => fileexists("$($(params)[_install_dir])$($(params)[_tarball])");

  reports:
    DEBUG.!matlab_install_dir_exists.!matlab_tarball_exists::
      "MatLab installer files have been removed.";

  files:
    matlab_install_dir_exists::
      "$($(params)[_unrolled_dir])"
        pathtype => "literal",
        delete => tidy,
        file_select => minutes_old(20),
        depth_search => recurse("inf"),
        comment => "Remove all files within $($(params)[_unrolled_dir]) created in last 20 minutes.";

      "$($(params)[_unrolled_dir])"
        pathtype => "literal",
        delete => tidy,
        file_select => minutes_old(20),
        depth_search => include_base,
        comment => "Remove the directory $($(params)[_unrolled_dir]).";

#    matlab_tarball_exists::
#      "$($(params)[_install_dir])$($(params)[_tarball])"
#        pathtype => "literal",
#        delete => tidy,
#        comment => "Remove $($(params)[_tarball]).";
}

#############################################

body file_select minutes_old(min)
{
      mtime       => irange(0,ago(0,0,0,0,"$(min)",0));
      file_result => "mtime";
}
