##############################################################################
#
#   manage/users/ldap.cf - EECS manual installer for LDAP user authentication
#   Maintained: Ben Roose, ver 0.2
#
###############################################################################

# TESTING ONLY:INPUT STANDARD LIBRARY (Remove after testing)
body file control
{
      inputs => { "$(sys.libdir)/stdlib.cf" };
}

######################################################################
# Public entry point: install_ldap_client bundle
######################################################################

# NOTES for future development of configuration:
# 1. allow access to pam_ldap directory for specific host!!

bundle common ldap_settings
{
  vars:

      "ldap_dist"
      string => "$(sys.workdir)/host_by_key/$(connection.key)/pam_ldap/",
      comment => "This is where agents look for their ldap password, cert, and config.";

      "ldap_cache_dir"
      string => "$(sys.workdir)/state/passwd/pam_ldap/",
      comment => "This is where agents will cache the ldap data locally
      (for offline enforcement).";
}

bundle agent install_ldap_client
{
  # @decription: manual install and configuration for system users to authenticate against WSU's LDAP servers

  vars:
    any::

      "config_dir" string => "/etc/";
      "certs_dir" string => "/etc/ssl/certs/";
      
      "secret_file" string => "pam_ldap.secret";
      "cert_file" string => "wsu_cacert.pem";
      "conf_file" string => "pam_ldap.conf";
      "conf_ldap_link" string => "/etc/ldap/ldap.conf";
      "secret_file_link" string => "/etc/ldap.secret";

      "ldap_binary" string => "/usr/bin/ldapsearch";

      "ldap_dist" string => "$(sys.workdir)/host_by_key/$(sys.key_digest)/pam_ldap/";
#      "ldap_cache_dir" string => "$(ldap_settings.ldap_cache_dir)";

      "files_to_check" slist => { "concat( $(config_dir), $(secret_file) )", "concat( $(certs_dir), $(cert_file) )", "concat( $(config_dir), $(conf_file) )" };
      
  classes:

      "ldap_client_configured"
      expression => filesexist( @(files_to_check) ),
        comment => "check config and secret files exist and create a useful class";

      "ldap_packages_installed"
        expression => fileexists( $(ldap_binary) ),
        comment => "check one of the ldap-utils binary files exists on the system before copying config files";

      
  files:
    !policy_server.ldap_packages_installed::
      "$(config_dir)$(secret_file)"
      copy_from => secure_cp( concat( $(ldap_dist), $(secret_file) ), $(sys.policy_hub) ),
      perms => mog("600", "root", "root"),
      comment => "secure copy of the remote file with LDAP password (WARNING: plaintext password)";

      "$(certs_dir)$(cert_file)"
      copy_from => secure_cp( concat( $(ldap_dist), $(cert_file) ), $(sys.policy_hub) ),
      perms => mog("600", "root", "root"),
      comment => "secure copy of the remote WSU certificate file";

      "$(config_dir)$(conf_file)"
      copy_from => secure_cp( concat( $(ldap_dist), $(conf_file) ), $(sys.policy_hub) ),
      perms => mog("644", "root", "root"),
      comment => "secure copy of the remote LDAP config file";

      "$(conf_ldap_link)"
      move_obstructions => "true",
      link_from => linkfrom( concat( $(config_dir), $(conf_file) ), "symlink" ),
      comment => "create symbolic link from /etc/ldap/ldap.conf to /etc/pam_ldap.conf";

      "$(secret_file_link)"
      move_obstructions => "true",
      link_from => linkfrom( concat( $(config_dir), $(secret_file) ), "symlink" ),
      comment => "create symbolic link from /etc/pam_ldap.secret to /etc/ldap.secret";
      
  methods:
    !policy_server::
      "ldap_pkgs"  usebundle => ldap_packages_installation;

  reports:
    (inform_mode|verbose_mode)::
      "$(this.bundle): Activated";

    (inform_mode.policy_server|verbose_mode.policy_server)::
      "$(this.bundle): NOT INSTALLING LDAP CLIENT, since this is a policy server";

    (DEBUG|DEBUG_install_ldap)::

    (DEBUG.secret_file_exists.cert_file_exists.conf_file_exists)::
      "$(this.bundle): all files copied over to system.";

}
#############################################

bundle agent ldap_packages_installation
{
  vars:
    debian::  
      "package_installs" slist => { 
      "ldap-utils",
      "ldaptor-doc",
      "ldaptor-utils",
      "libpam-ldap",
      "libsasl2-modules-ldap",
      "python-ldaptor",
      };
    redhat::
      "package_installs" slist => {
	# ??
      };

  methods:
      "install_ldap_packages" usebundle => package_latest("$(package_installs)"),
      comment => "Install LDAP authentication module packages";
      
  reports:
    (inform_mode|verbose_mode)::
      "$(this.bundle): Activated";

}

#############################################

bundle server ldap_access
# @brief This bundle shares the path to the password hash
{
  access:

      # It's important that this path have $(connection.key) in it!
      "$(ldap_settings.ldap_dist)"
      admit_keys =>  { $(connection.key) },
              comment => "Grant each host to access its own copy of the ldap client files.
                  We assume that each host has a unique keypair";
  reports:
    (inform_mode|verbose_mode)::
      "$(this.bundle): Activated";

}

#############################################
