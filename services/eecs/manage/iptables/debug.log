 verbose: Could not open extension plugin 'cfengine-enterprise.so' from '/var/cfengine/lib/cfengine-enterprise.so': (not installed)
 verbose:  CFEngine Core 3.8.2
 verbose: ----------------------------------------------------------------
 verbose:  Initialization preamble 
 verbose: ----------------------------------------------------------------
 verbose: Default port for cfengine is 5308
 verbose: Work directory is /var/cfengine
 verbose: Making sure that internal directories are private...
 verbose: Checking integrity of the trusted workdir
 verbose: Checking integrity of the state database
 verbose: Checking integrity of the module directory
 verbose: Checking integrity of the PKI directory
 verbose: Loaded private key at '/var/cfengine/ppkeys/localhost.priv'
 verbose: Loaded public key '/var/cfengine/ppkeys/localhost.pub'
 verbose: Loading JSON augments from './def.json' (input dir '.', input file './main.cf'
 verbose: could not load JSON augments from './def.json'
 verbose: Reference time set to 'Tue Jun 14 11:33:11 2016'
 verbose: CFEngine Core 3.8.2 - ready
 verbose: ----------------------------------------------------------------
 verbose:  Environment discovery 
 verbose: ----------------------------------------------------------------
 verbose: Host name is: policyhub
 verbose: Operating System Type is linux
 verbose: Operating System Release is 3.16.0-4-amd64
 verbose: Architecture = x86_64
 verbose: CFEngine detected operating system description is linux
 verbose: The time is now Tue Jun 14 11:33:11 2016
 verbose: Additional hard class defined as: 64_bit
 verbose: Additional hard class defined as: linux_3_16_0_4_amd64
 verbose: Additional hard class defined as: linux_x86_64
 verbose: Additional hard class defined as: linux_x86_64_3_16_0_4_amd64
 verbose: GNU autoconf class from compile time: compiled_on_linux_gnu
 verbose: Address given by nameserver: 127.0.1.1
 verbose: No interface exception file /var/cfengine/inputs/ignore_interfaces.rx
 verbose: Interface 1: lo
 verbose: Interface 2: eth0
 verbose: IP address of host set to 156.26.10.4
 verbose: Trying to locate my IPv6 address
 verbose: Found IPv6 address fe80::5652:ff:fe81:ee
 verbose: Looking for environment from cf-monitord...
 verbose: Loading environment...
 verbose: Environment data loaded
 verbose: Extended system discovery is only available in CFEngine Enterprise
 verbose: This appears to be a debian system.
 verbose: Looking for Debian version...
 verbose: This appears to be a Debian 8.4 system.
 verbose: This system seems to have the aptitude package system
 verbose: Found 4 processors
 verbose: Loading persistent classes
 verbose: This agent is bootstrapped to: 156.26.10.4
 verbose: Additional class defined: am_policy_hub
 verbose: Additional class defined: policy_server
 verbose: Input file is outside default repository, validating it
 verbose: Input file './main.cf' has changed since the last policy read attempt (file is newer than previous)
 verbose: Input file is changed since last validation, validating it
 verbose: Verifying the syntax of the inputs...
 verbose: Checking policy with command '"/var/cfengine/bin/cf-promises" "./main.cf" -b "config_iptables"'
 verbose: Saved policy validated marker file '/var/cfengine/state/cf_promises_validated'
 verbose: ----------------------------------------------------------------
 verbose:  Loading policy 
 verbose: ----------------------------------------------------------------
 verbose: Begin Parsing file './main.cf'
 verbose: End Parsing file './main.cf'
 verbose: Function 'join', argument 'i_nosort' did not resolve to a variable
 verbose: Function 'join', argument 'i_nosort' did not resolve to a variable
 verbose: Function 'join', argument 'i_nosort' did not resolve to a variable
 verbose: Skipping promise 'cmnd[in_iface][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[in_iface][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[s_ip][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[s_ip][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[d_ip][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[d_ip][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[d_port][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[d_port][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[s_port][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[s_port][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[proto][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[proto][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[chain][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[chain][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[target][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[target][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[context][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[context][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'comment', for if/ifvarclass is not in scope
 verbose: Begin Parsing file '/var/cfengine/inputs/lib/stdlib.cf'
 verbose: End Parsing file '/var/cfengine/inputs/lib/stdlib.cf'
 verbose: Begin Parsing file '/var/cfengine/inputs/lib/packages.cf'
 verbose: End Parsing file '/var/cfengine/inputs/lib/packages.cf'
 verbose: Begin Parsing file '/var/cfengine/inputs/lib/paths.cf'
 verbose: End Parsing file '/var/cfengine/inputs/lib/paths.cf'
 verbose: C:     +  Global class: _have_bin_systemctl 
 verbose: Class identifier '_stdlib_has_path_$(all_paths)' contains illegal characters - canonifying
 verbose: Class identifier '_stdlib_path_exists_$(all_paths)' contains illegal characters - canonifying
 verbose: Begin Parsing file '/var/cfengine/inputs/lib/files.cf'
 verbose: End Parsing file '/var/cfengine/inputs/lib/files.cf'
 verbose: Begin Parsing file '/var/cfengine/inputs/lib/common.cf'
 verbose: End Parsing file '/var/cfengine/inputs/lib/common.cf'
 verbose: Skipping loading of duplicate policy file /var/cfengine/inputs/lib/common.cf
 verbose: Begin Parsing file '/var/cfengine/inputs/lib/edit_xml.cf'
 verbose: End Parsing file '/var/cfengine/inputs/lib/edit_xml.cf'
 verbose: Begin Parsing file '/var/cfengine/inputs/lib/cfe_internal.cf'
 verbose: End Parsing file '/var/cfengine/inputs/lib/cfe_internal.cf'
 verbose: maparray: argument 'default:cfe_internal_cleanup_agent_reports.reports_size' does not resolve to a container or a list or a CFEngine array
 verbose: maparray: argument 'default:cfe_internal_cleanup_agent_reports.reports_size' does not resolve to a container or a list or a CFEngine array
 verbose: maparray: argument 'default:cfe_internal_cleanup_agent_reports.reports_size' does not resolve to a container or a list or a CFEngine array
 verbose: Skipping loading of duplicate policy file /var/cfengine/inputs/lib/common.cf
 verbose: Begin Parsing file '/var/cfengine/inputs/lib/commands.cf'
 verbose: End Parsing file '/var/cfengine/inputs/lib/commands.cf'
 verbose: Begin Parsing file '/var/cfengine/inputs/lib/monitor.cf'
 verbose: End Parsing file '/var/cfengine/inputs/lib/monitor.cf'
 verbose: Begin Parsing file '/var/cfengine/inputs/lib/cfe_internal_hub.cf'
 verbose: End Parsing file '/var/cfengine/inputs/lib/cfe_internal_hub.cf'
 verbose: Skipping loading of duplicate policy file /var/cfengine/inputs/lib/common.cf
 verbose: Skipping loading of duplicate policy file /var/cfengine/inputs/lib/commands.cf
 verbose: Begin Parsing file '/var/cfengine/inputs/lib/users.cf'
 verbose: End Parsing file '/var/cfengine/inputs/lib/users.cf'
 verbose: Begin Parsing file '/var/cfengine/inputs/lib/bundles.cf'
 verbose: End Parsing file '/var/cfengine/inputs/lib/bundles.cf'
 verbose: Function 'length', argument 'bundlesfound' did not resolve to a variable
 verbose: Function 'length', argument 'bundlesfound' did not resolve to a variable
 verbose: Function 'length', argument 'bundlesfound' did not resolve to a variable
 verbose: Skipping loading of duplicate policy file /var/cfengine/inputs/lib/paths.cf
 verbose: Skipping loading of duplicate policy file /var/cfengine/inputs/lib/files.cf
 verbose: Skipping loading of duplicate policy file /var/cfengine/inputs/lib/commands.cf
 verbose: Begin Parsing file '/var/cfengine/inputs/lib/cfengine_enterprise_hub_ha.cf'
 verbose: End Parsing file '/var/cfengine/inputs/lib/cfengine_enterprise_hub_ha.cf'
 verbose: Skipping loading of duplicate policy file /var/cfengine/inputs/lib/paths.cf
 verbose: Begin Parsing file '/var/cfengine/inputs/lib/databases.cf'
 verbose: End Parsing file '/var/cfengine/inputs/lib/databases.cf'
 verbose: Skipping loading of duplicate policy file /var/cfengine/inputs/lib/commands.cf
 verbose: Skipping loading of duplicate policy file /var/cfengine/inputs/lib/files.cf
 verbose: Begin Parsing file '/var/cfengine/inputs/lib/storage.cf'
 verbose: End Parsing file '/var/cfengine/inputs/lib/storage.cf'
 verbose: Begin Parsing file '/var/cfengine/inputs/lib/processes.cf'
 verbose: End Parsing file '/var/cfengine/inputs/lib/processes.cf'
 verbose: Skipping loading of duplicate policy file /var/cfengine/inputs/lib/common.cf
 verbose: Begin Parsing file '/var/cfengine/inputs/lib/guest_environments.cf'
 verbose: End Parsing file '/var/cfengine/inputs/lib/guest_environments.cf'
 verbose: Begin Parsing file '/var/cfengine/inputs/lib/services.cf'
 verbose: End Parsing file '/var/cfengine/inputs/lib/services.cf'
 verbose: Skipping promise 'init_system', for if/ifvarclass is not in scope
 verbose: Skipping loading of duplicate policy file /var/cfengine/inputs/lib/common.cf
 verbose: Skipping loading of duplicate policy file /var/cfengine/inputs/lib/paths.cf
 verbose: ----------------------------------------------------------------
 verbose: PREFIX LEGEND:
 verbose:  V: variable or parameter new definition in scope
 verbose:  C: class/context new definition 
 verbose:  B: bundle start/end execution marker
 verbose:  P: promise execution output 
 verbose:  A: accounting output 
 verbose:  T: time measurement for stated object (promise or bundle)
 verbose: ----------------------------------------------------------------
 verbose: ----------------------------------------------------------------
 verbose: BEGIN Discovered hard classes:
 verbose: C: discovered hard class 127_0_0_1
 verbose: C: discovered hard class 156_26_10_4
 verbose: C: discovered hard class 4_cpus
 verbose: C: discovered hard class 64_bit
 verbose: C: discovered hard class Day14
 verbose: C: discovered hard class GMT_Afternoon
 verbose: C: discovered hard class GMT_Day14
 verbose: C: discovered hard class GMT_Hr16
 verbose: C: discovered hard class GMT_Hr16_Q3
 verbose: C: discovered hard class GMT_June
 verbose: C: discovered hard class GMT_Lcycle_0
 verbose: C: discovered hard class GMT_Min30_35
 verbose: C: discovered hard class GMT_Min33
 verbose: C: discovered hard class GMT_Q3
 verbose: C: discovered hard class GMT_Tuesday
 verbose: C: discovered hard class GMT_Yr2016
 verbose: C: discovered hard class Hr11
 verbose: C: discovered hard class Hr11_Q3
 verbose: C: discovered hard class June
 verbose: C: discovered hard class Lcycle_0
 verbose: C: discovered hard class Min30_35
 verbose: C: discovered hard class Min33
 verbose: C: discovered hard class Morning
 verbose: C: discovered hard class PK_MD5_ed164ffe1d0331834492770ed7f430c0
 verbose: C: discovered hard class Q3
 verbose: C: discovered hard class Tuesday
 verbose: C: discovered hard class Yr2016
 verbose: C: discovered hard class agent
 verbose: C: discovered hard class am_policy_hub
 verbose: C: discovered hard class any
 verbose: C: discovered hard class cfengine
 verbose: C: discovered hard class cfengine_3
 verbose: C: discovered hard class cfengine_3_8
 verbose: C: discovered hard class cfengine_3_8_2
 verbose: C: discovered hard class cfengine_in_high
 verbose: C: discovered hard class community_edition
 verbose: C: discovered hard class compiled_on_linux_gnu
 verbose: C: discovered hard class cpu0_high
 verbose: C: discovered hard class cpu1_normal
 verbose: C: discovered hard class cpu2_low
 verbose: C: discovered hard class cpu3_low
 verbose: C: discovered hard class cpu_low
 verbose: C: discovered hard class cs_wichita_edu
 verbose: C: discovered hard class debian
 verbose: C: discovered hard class debian_8
 verbose: C: discovered hard class debian_8_4
 verbose: C: discovered hard class diskfree_low_normal
 verbose: C: discovered hard class edu
 verbose: C: discovered hard class entropy_misc_in_low
 verbose: C: discovered hard class entropy_misc_out_low
 verbose: C: discovered hard class entropy_postgresql_in_low
 verbose: C: discovered hard class entropy_postgresql_out_low
 verbose: C: discovered hard class entropy_ssh_in_high
 verbose: C: discovered hard class fe80__5652_ff_fe81_ee
 verbose: C: discovered hard class feature
 verbose: C: discovered hard class feature_curl
 verbose: C: discovered hard class feature_def
 verbose: C: discovered hard class feature_def_json
 verbose: C: discovered hard class feature_def_json_preparse
 verbose: C: discovered hard class feature_xml
 verbose: C: discovered hard class feature_yaml
 verbose: C: discovered hard class have_aptitude
 verbose: C: discovered hard class inform_mode
 verbose: C: discovered hard class ipv4_127
 verbose: C: discovered hard class ipv4_127_0
 verbose: C: discovered hard class ipv4_127_0_0
 verbose: C: discovered hard class ipv4_127_0_0_1
 verbose: C: discovered hard class ipv4_156
 verbose: C: discovered hard class ipv4_156_26
 verbose: C: discovered hard class ipv4_156_26_10
 verbose: C: discovered hard class ipv4_156_26_10_4
 verbose: C: discovered hard class linux
 verbose: C: discovered hard class linux_3_16_0_4_amd64
 verbose: C: discovered hard class linux_x86_64
 verbose: C: discovered hard class linux_x86_64_3_16_0_4_amd64
 verbose: C: discovered hard class linux_x86_64_3_16_0_4_amd64__1_SMP_Debian_3_16_7_ckt25_2__2016_04_08_
 verbose: C: discovered hard class mac_54_52_00_81_00_ee
 verbose: C: discovered hard class net_iface_eth0
 verbose: C: discovered hard class net_iface_lo
 verbose: C: discovered hard class otherprocs_high
 verbose: C: discovered hard class policy_server
 verbose: C: discovered hard class policyhub
 verbose: C: discovered hard class policyhub_cs_wichita_edu
 verbose: C: discovered hard class rootprocs_high_normal
 verbose: C: discovered hard class smtp_in_high
 verbose: C: discovered hard class ssh_in_high
 verbose: C: discovered hard class systemd
 verbose: C: discovered hard class users_high
 verbose: C: discovered hard class verbose_mode
 verbose: C: discovered hard class wichita_edu
 verbose: C: discovered hard class www_in_high
 verbose: C: discovered hard class x86_64
 verbose: END Discovered hard classes
 verbose: ----------------------------------------------------------------
 verbose: BEGIN initial soft classes:
 verbose: C: added soft class DEBUG
 verbose: C: added soft class _have_bin_systemctl
 verbose: END initial soft classes
 verbose: ----------------------------------------------------------------
 verbose:  Preliminary variable/class-context convergence 
 verbose: ----------------------------------------------------------------
 verbose: Skipping promise '/sbin/iptables-save -t filter > $(cdir)/cf.iptables.filter.current', as promise dependency 'iptables_create_cache_dir' has not yet been kept
 verbose: Skipping promise '$(cdir)/cf.iptables.filter.current', as promise dependency 'iptables_filter_save' has not yet been kept
 verbose: Function 'join', argument 'i_nosort' did not resolve to a variable
 verbose: Function 'join', argument 'i_nosort' did not resolve to a variable
 verbose: Skipping promise 'cmnd[in_iface][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[in_iface][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[s_ip][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[s_ip][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[d_ip][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[d_ip][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[d_port][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[d_port][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[s_port][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[s_port][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[proto][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[proto][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[chain][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[chain][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[target][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[target][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[context][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[context][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'comment', for if/ifvarclass is not in scope
 verbose: Skipping promise '-A $(cmnd[chain][$(i)])$(cmnd[in_iface])$(cmnd[s_ip][$(i)])$(cmnd[d_ip][$(i)]) -p $(cmnd[proto][$(i)]) -m $(cmnd[proto][$(i)])$(cmnd[s_port][$(i)])$(cmnd[d_port][$(i)]) -j $(cmnd[target][$(i)])', for if/ifvarclass is not in scope
 verbose: Skipping promise 'DEBUG $(this.bundle): sorry, can't do file-based installs on $(sys#os)', for if/ifvarclass is not in scope
 verbose: Skipping evaluation of classes promise as class '_have_bin_systemctl' is already set
 verbose: Skipping promise '#+\s*$(index)\s*=.*', for if/ifvarclass is not in scope
 verbose: Skipping promise '$(index)\s*=.*', for if/ifvarclass is not in scope
 verbose: Skipping promise '$(index)=$($(tab)[$(sectionName)][$(index)])', for if/ifvarclass is not in scope
 verbose: Skipping promise '#+\s*$(index)\s*=.*', for if/ifvarclass is not in scope
 verbose: Skipping promise '$(index)\s*=.*', for if/ifvarclass is not in scope
 verbose: Skipping promise '$(index)=$($(tab)[$(sectionName)][$(index)])', for if/ifvarclass is not in scope
 verbose: Skipping promise '$(index)="$($(v)[$(index)])"', for if/ifvarclass is not in scope
 verbose: Skipping promise '$(index)=$($(v)[$(index)])', for if/ifvarclass is not in scope
 verbose: Skipping promise '^\s*#\s*($(index)\s+.*|$(index))$', for if/ifvarclass is not in scope
 verbose: Skipping promise '$(index) $($(v)[$(index)])', for if/ifvarclass is not in scope
 verbose: Skipping promise '$(index) $($(v)[$(index)])', for if/ifvarclass is not in scope
 verbose: Skipping promise '^$(cp)($(i)$(bp).*|$(i))$', for if/ifvarclass is not in scope
 verbose: Skipping promise '$(i)$(sep)$($(v)[$(i)])', for if/ifvarclass is not in scope
 verbose: Skipping promise '$(i)$(sep)$($(v)[$(i)])', for if/ifvarclass is not in scope
 verbose: Skipping promise '$(this.bundle): Line for '$(i)' exists', for if/ifvarclass is not in scope
 verbose: Skipping promise '$(this.bundle): Line for '$(i)' does not exist', for if/ifvarclass is not in scope
 verbose: Skipping promise '$(index) $($(v)[$(index)])', for if/ifvarclass is not in scope
 verbose: Skipping promise '$(index)$(sep)$($(v)[$(index)])', for if/ifvarclass is not in scope
 verbose: Skipping promise '$($(v)[$(index)])', for if/ifvarclass is not in scope
 verbose: Skipping promise '$($(v)[$(index)])', for if/ifvarclass is not in scope
 verbose: Skipping promise '$(line)', for if/ifvarclass is not in scope
 verbose: Skipping promise 'DEBUG $(this.bundle): creating $(file) with contents '$(summary)'', for if/ifvarclass is not in scope
 verbose: Skipping promise 'DEBUG $(this.bundle): creating $(file) with contents '$(summary)', mode '$(mode)', owner '$(owner)' and group '$(group)'', for if/ifvarclass is not in scope
 verbose: Skipping promise 'diff_files', for unless is in scope
 verbose: Skipping promise 'promise_log_files', for unless is in scope
 verbose: maparray: argument 'default:cfe_internal_cleanup_agent_reports.reports_size' does not resolve to a container or a list or a CFEngine array
 verbose: maparray: argument 'default:cfe_internal_cleanup_agent_reports.reports_size' does not resolve to a container or a list or a CFEngine array
 verbose: Function 'length', argument 'tmpmap' did not resolve to a variable
 verbose: Skipping promise 'DEBUG $(this.bundle): Client history purge triggered', for if/ifvarclass is not in scope
 verbose: Skipping promise 'DEBUG $(this.bundle): This bundle does not support Windows', for if/ifvarclass is not in scope
 verbose: Skipping promise '$(this.bundle): $(method) $(host):$(port)/$(uri) got 200 OK', for if/ifvarclass is not in scope
 verbose: Skipping promise '$(this.bundle): $(method) $(host):$(port)/$(uri) did *not* get 200 OK', for if/ifvarclass is not in scope
 verbose: Function 'length', argument 'bundlesfound' did not resolve to a variable
 verbose: Function 'length', argument 'bundlesfound' did not resolve to a variable
 verbose: Skipping promise 'any', for if/ifvarclass is not in scope
 verbose: Function REGLIST was promised a list called '@(systemd_service_info)' but this was not found
 verbose: Function REGLIST was promised a list called '@(systemd_service_info)' but this was not found
 verbose: Function REGLIST was promised a list called '@(systemd_service_info)' but this was not found
 verbose: Function REGLIST was promised a list called '@(systemd_service_info)' but this was not found
 verbose: Function REGLIST was promised a list called '@(systemd_service_info)' but this was not found
 verbose: Function REGLIST was promised a list called '@(systemd_service_info)' but this was not found
 verbose: Skipping promise 'init_system', for if/ifvarclass is not in scope
 verbose: Skipping promise '$(startcommand[$(service)])', for if/ifvarclass is not in scope
 verbose: Skipping promise '$(default[prefix][$(default[init])])$(baseinit[$(service)]) $(state)', for if/ifvarclass is not in scope
 verbose: Skipping promise '$(default[prefix][$(inits)])$(baseinit[$(service)]) $(state)', for if/ifvarclass is not in scope
 verbose: Skipping promise '$(default[prefix][$(inits)])$(baseinit[$(service)]) $(state)', for if/ifvarclass is not in scope
 verbose: Skipping promise '$(default[prefix][$(inits)])$(baseinit[$(service)]) $(state)', for if/ifvarclass is not in scope
 verbose: Skipping promise '$(default[prefix][$(inits)])$(baseinit[$(service)]) $(state)', for if/ifvarclass is not in scope
 verbose: Skipping promise '$(default[cmd][$(default[init])])', for if/ifvarclass is not in scope
 verbose: Skipping promise '$(default[cmd][$(inits)])', for if/ifvarclass is not in scope
 verbose: Skipping promise '$(default[cmd][$(inits)])', for if/ifvarclass is not in scope
 verbose: Skipping promise '$(default[cmd][$(inits)])', for if/ifvarclass is not in scope
 verbose: Skipping promise '$(default[cmd][$(inits)])', for if/ifvarclass is not in scope
 verbose: Skipping promise 'DEBUG $(this.bundle): Using init system $(inits)', for if/ifvarclass is not in scope
 verbose: Skipping promise 'DEBUG $(this.bundle): Using init system $(inits)', for if/ifvarclass is not in scope
 verbose: Skipping promise 'DEBUG $(this.bundle): Using init system $(inits)', for if/ifvarclass is not in scope
 verbose: Skipping promise 'DEBUG $(this.bundle): Using init system $(inits)', for if/ifvarclass is not in scope
 verbose: Skipping promise 'DEBUG $(this.bundle): No init system is set, using $(default[init])', for if/ifvarclass is not in scope
 verbose: Skipping promise 'DEBUG $(this.bundle): The service $(service) needs to be started', for if/ifvarclass is not in scope
 verbose: Skipping promise 'DEBUG $(this.bundle): The service pattern is provided: $(pattern[$(service)])', for if/ifvarclass is not in scope
 verbose: Skipping promise 'DEBUG $(this.bundle): The default service pattern was used: $(default[pattern])', for if/ifvarclass is not in scope
 verbose: Skipping promise 'DEBUG $(this.bundle): The stopcommand is provided: $(stopcommand[$(service)])', for if/ifvarclass is not in scope
 verbose: Skipping promise 'DEBUG $(this.bundle): The stopcommand is NOT provided, using default', for if/ifvarclass is not in scope
 verbose: Skipping promise 'DEBUG $(this.bundle): The startcommand is provided: $(startcommand[$(service)])', for if/ifvarclass is not in scope
 verbose: Skipping promise 'DEBUG $(this.bundle): The startcommand is NOT provided, using default', for if/ifvarclass is not in scope
 verbose: Skipping promise 'DEBUG $(this.bundle): The restartcommand is provided: $(restartcommand[$(service)])', for if/ifvarclass is not in scope
 verbose: Skipping promise 'DEBUG $(this.bundle): The restartcommand is NOT provided, using default', for if/ifvarclass is not in scope
 verbose: Skipping promise 'DEBUG $(this.bundle): The reloadcommand is provided: $(reloadcommand[$(service)])', for if/ifvarclass is not in scope
 verbose: Skipping promise 'DEBUG $(this.bundle): The reloadcommand is NOT provided, using default', for if/ifvarclass is not in scope
 verbose: Skipping promise 'DEBUG $(this.bundle): The baseinit is provided: $(baseinit[$(service)])', for if/ifvarclass is not in scope
 verbose: Skipping promise 'DEBUG $(this.bundle): The baseinit is NOT provided, using default', for if/ifvarclass is not in scope
 verbose: Skipping evaluation of classes promise as class '_have_bin_systemctl' is already set
 verbose: C:     +  Global class: _stdlib_has_path_awk 
 verbose: C:     +  Global class: _stdlib_has_path_ping 
 verbose: C:     +  Global class: _stdlib_has_path_sysctl 
 verbose: C:     +  Global class: _stdlib_has_path_crontab 
 verbose: C:     +  Global class: _stdlib_has_path_logger 
 verbose: C:     +  Global class: _stdlib_has_path_apt_key 
 verbose: C:     +  Global class: _stdlib_has_path_crontabs 
 verbose: C:     +  Global class: _stdlib_has_path_perl 
 verbose: C:     +  Global class: _stdlib_has_path_printf 
 verbose: C:     +  Global class: _stdlib_has_path_npm 
 verbose: C:     +  Global class: _stdlib_has_path_dmidecode 
 verbose: C:     +  Global class: _stdlib_has_path_test 
 verbose: C:     +  Global class: _stdlib_has_path_aptitude 
 verbose: C:     +  Global class: _stdlib_has_path_iptables 
 verbose: C:     +  Global class: _stdlib_has_path_groupadd 
 verbose: C:     +  Global class: _stdlib_has_path_bc 
 verbose: C:     +  Global class: _stdlib_has_path_wget 
 verbose: C:     +  Global class: _stdlib_has_path_hostname 
 verbose: C:     +  Global class: _stdlib_has_path_virtualenv 
 verbose: C:     +  Global class: _stdlib_has_path_createrepo 
 verbose: C:     +  Global class: _stdlib_has_path_curl 
 verbose: C:     +  Global class: _stdlib_has_path_echo 
 verbose: C:     +  Global class: _stdlib_has_path_free 
 verbose: C:     +  Global class: _stdlib_has_path_lsattr 
 verbose: C:     +  Global class: _stdlib_has_path_netstat 
 verbose: C:     +  Global class: _stdlib_has_path_useradd 
 verbose: C:     +  Global class: _stdlib_has_path_init 
 verbose: C:     +  Global class: _stdlib_has_path_egrep 
 verbose: C:     +  Global class: _stdlib_has_path_userdel 
 verbose: C:     +  Global class: _stdlib_has_path_ethtool 
 verbose: C:     +  Global class: _stdlib_has_path_cksum 
 verbose: C:     +  Global class: _stdlib_has_path_df 
 verbose: C:     +  Global class: _stdlib_has_path_diff 
 verbose: C:     +  Global class: _stdlib_has_path_lsof 
 verbose: C:     +  Global class: _stdlib_has_path_realpath 
 verbose: C:     +  Global class: _stdlib_has_path_apt_config 
 verbose: C:     +  Global class: _stdlib_has_path_sed 
 verbose: C:     +  Global class: _stdlib_has_path_tr 
 verbose: C:     +  Global class: _stdlib_has_path_pgrep 
 verbose: C:     +  Global class: _stdlib_has_path_apt_cache 
 verbose: C:     +  Global class: _stdlib_has_path_groupmod 
 verbose: C:     +  Global class: _stdlib_has_path_dig 
 verbose: C:     +  Global class: _stdlib_has_path_dpkg 
 verbose: C:     +  Global class: _stdlib_has_path_cut 
 verbose: C:     +  Global class: _stdlib_has_path_svc 
 verbose: C:     +  Global class: _stdlib_has_path_ip 
 verbose: C:     +  Global class: _stdlib_has_path_ifconfig 
 verbose: C:     +  Global class: _stdlib_has_path_apt_get 
 verbose: C:     +  Global class: _stdlib_has_path_nologin 
 verbose: C:     +  Global class: _stdlib_has_path_pip 
 verbose: C:     +  Global class: _stdlib_has_path_iptables_save 
 verbose: C:     +  Global class: _stdlib_has_path_grep 
 verbose: C:     +  Global class: _stdlib_has_path_domainname 
 verbose: C:     +  Global class: _stdlib_has_path_git 
 verbose: C:     +  Global class: _stdlib_has_path_ls 
 verbose: C:     +  Global class: _stdlib_has_path_chkconfig 
 verbose: C:     +  Global class: _stdlib_has_path_dc 
 verbose: C:     +  Global class: _stdlib_has_path_wc 
 verbose: C:     +  Global class: _stdlib_has_path_cat 
 verbose: C:     +  Global class: _stdlib_has_path_getfacl 
 verbose: C:     +  Global class: _stdlib_has_path_groupdel 
 verbose: C:     +  Global class: _stdlib_has_path_sort 
 verbose: C:     +  Global class: _stdlib_has_path_usermod 
 verbose: C:     +  Global class: _stdlib_has_path_shadow 
 verbose: C:     +  Global class: _stdlib_has_path_update_rc_d 
 verbose: C:     +  Global class: _stdlib_has_path_find 
 verbose: C:     +  Global class: _stdlib_has_path_systemctl 
 verbose: C:     +  Global class: _stdlib_has_path_tar 
 verbose: C:     +  Global class: _stdlib_has_path_service 
 verbose: C:     +  Global class: _stdlib_has_path_update_alternatives 
 verbose: C:     +  Global class: _stdlib_has_path_env 
 verbose: C:     +  Global class: _stdlib_path_exists_awk 
 verbose: C:     +  Global class: _stdlib_path_exists_ping 
 verbose: C:     +  Global class: _stdlib_path_exists_sysctl 
 verbose: C:     +  Global class: _stdlib_path_exists_crontab 
 verbose: C:     +  Global class: _stdlib_path_exists_logger 
 verbose: C:     +  Global class: _stdlib_path_exists_apt_key 
 verbose: C:     +  Global class: _stdlib_path_exists_crontabs 
 verbose: C:     +  Global class: _stdlib_path_exists_perl 
 verbose: C:     +  Global class: _stdlib_path_exists_printf 
 verbose: C:     +  Global class: _stdlib_path_exists_dmidecode 
 verbose: C:     +  Global class: _stdlib_path_exists_test 
 verbose: C:     +  Global class: _stdlib_path_exists_aptitude 
 verbose: C:     +  Global class: _stdlib_path_exists_iptables 
 verbose: C:     +  Global class: _stdlib_path_exists_groupadd 
 verbose: C:     +  Global class: _stdlib_path_exists_bc 
 verbose: C:     +  Global class: _stdlib_path_exists_wget 
 verbose: C:     +  Global class: _stdlib_path_exists_hostname 
 verbose: C:     +  Global class: _stdlib_path_exists_curl 
 verbose: C:     +  Global class: _stdlib_path_exists_echo 
 verbose: C:     +  Global class: _stdlib_path_exists_free 
 verbose: C:     +  Global class: _stdlib_path_exists_lsattr 
 verbose: C:     +  Global class: _stdlib_path_exists_netstat 
 verbose: C:     +  Global class: _stdlib_path_exists_useradd 
 verbose: C:     +  Global class: _stdlib_path_exists_init 
 verbose: C:     +  Global class: _stdlib_path_exists_egrep 
 verbose: C:     +  Global class: _stdlib_path_exists_userdel 
 verbose: C:     +  Global class: _stdlib_path_exists_cksum 
 verbose: C:     +  Global class: _stdlib_path_exists_df 
 verbose: C:     +  Global class: _stdlib_path_exists_diff 
 verbose: C:     +  Global class: _stdlib_path_exists_lsof 
 verbose: C:     +  Global class: _stdlib_path_exists_realpath 
 verbose: C:     +  Global class: _stdlib_path_exists_apt_config 
 verbose: C:     +  Global class: _stdlib_path_exists_sed 
 verbose: C:     +  Global class: _stdlib_path_exists_tr 
 verbose: C:     +  Global class: _stdlib_path_exists_pgrep 
 verbose: C:     +  Global class: _stdlib_path_exists_apt_cache 
 verbose: C:     +  Global class: _stdlib_path_exists_groupmod 
 verbose: C:     +  Global class: _stdlib_path_exists_dig 
 verbose: C:     +  Global class: _stdlib_path_exists_dpkg 
 verbose: C:     +  Global class: _stdlib_path_exists_cut 
 verbose: C:     +  Global class: _stdlib_path_exists_svc 
 verbose: C:     +  Global class: _stdlib_path_exists_ip 
 verbose: C:     +  Global class: _stdlib_path_exists_ifconfig 
 verbose: C:     +  Global class: _stdlib_path_exists_apt_get 
 verbose: C:     +  Global class: _stdlib_path_exists_nologin 
 verbose: C:     +  Global class: _stdlib_path_exists_iptables_save 
 verbose: C:     +  Global class: _stdlib_path_exists_grep 
 verbose: C:     +  Global class: _stdlib_path_exists_domainname 
 verbose: C:     +  Global class: _stdlib_path_exists_git 
 verbose: C:     +  Global class: _stdlib_path_exists_ls 
 verbose: C:     +  Global class: _stdlib_path_exists_dc 
 verbose: C:     +  Global class: _stdlib_path_exists_wc 
 verbose: C:     +  Global class: _stdlib_path_exists_cat 
 verbose: C:     +  Global class: _stdlib_path_exists_getfacl 
 verbose: C:     +  Global class: _stdlib_path_exists_groupdel 
 verbose: C:     +  Global class: _stdlib_path_exists_sort 
 verbose: C:     +  Global class: _stdlib_path_exists_usermod 
 verbose: C:     +  Global class: _stdlib_path_exists_shadow 
 verbose: C:     +  Global class: _stdlib_path_exists_update_rc_d 
 verbose: C:     +  Global class: _stdlib_path_exists_find 
 verbose: C:     +  Global class: _stdlib_path_exists_systemctl 
 verbose: C:     +  Global class: _stdlib_path_exists_tar 
 verbose: C:     +  Global class: _stdlib_path_exists_service 
 verbose: C:     +  Global class: _stdlib_path_exists_update_alternatives 
 verbose: C:     +  Global class: _stdlib_path_exists_env 
 verbose: Function 'join', argument 'i_nosort' did not resolve to a variable
 verbose: Function 'join', argument 'i_nosort' did not resolve to a variable
 verbose: Function 'join', argument 'i_nosort' did not resolve to a variable
 verbose: Skipping promise 'cmnd[in_iface][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[in_iface][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[s_ip][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[s_ip][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[d_ip][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[d_ip][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[d_port][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[d_port][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[s_port][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[s_port][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[proto][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[proto][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[chain][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[chain][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[target][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[target][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[context][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'cmnd[context][$(i)]', for if/ifvarclass is not in scope
 verbose: Skipping promise 'comment', for if/ifvarclass is not in scope
 verbose: Skipping promise 'diff_files', for unless is in scope
 verbose: Skipping promise 'promise_log_files', for unless is in scope
 verbose: maparray: argument 'default:cfe_internal_cleanup_agent_reports.reports_size' does not resolve to a container or a list or a CFEngine array
 verbose: maparray: argument 'default:cfe_internal_cleanup_agent_reports.reports_size' does not resolve to a container or a list or a CFEngine array
 verbose: maparray: argument 'default:cfe_internal_cleanup_agent_reports.reports_size' does not resolve to a container or a list or a CFEngine array
 verbose: Function 'length', argument 'bundlesfound' did not resolve to a variable
 verbose: Function 'length', argument 'bundlesfound' did not resolve to a variable
 verbose: Function 'length', argument 'bundlesfound' did not resolve to a variable
 verbose: Skipping promise 'init_system', for if/ifvarclass is not in scope
 verbose: Setting minimum acceptable TLS version: 1.0
 verbose: ----------------------------------------------------------------
 verbose:  Begin policy/promise evaluation 
 verbose: ----------------------------------------------------------------
    info: Using command line specified bundlesequence
 verbose: Using bundlesequence =>  {'config_iptables'}
 verbose: B: *****************************************************************
 verbose: B: BEGIN bundle config_iptables
 verbose: B: *****************************************************************
 verbose: V: .........................................................
 verbose: V: BEGIN variables (pass 1)
 verbose: V: .........................................................
 verbose: V:     Computing value of "iptables_data"
 verbose: V:     Computing value of "chain_policies"
 verbose: V:     Computing value of "rule_array"
 verbose: V:     Computing value of "rule_key"
 verbose: V:     Computing value of "json_str"
 verbose: P: .........................................................
 verbose: P: BEGIN un-named promise of type "methods" (pass 1)
 verbose: P:    Promiser/affected object: 'iptables_filter'
 verbose: P:    From parameterized bundle: config_iptables( {'input','@(rule_array)','1'})
 verbose: P:    Base context class: any
 verbose: P:    Container path : '/default/config_iptables/methods/'iptables_filter'[0]'
 verbose: P:
 verbose: P:    Comment:  pass iptables policies and rules (plus rule_key) read in from external file.
 verbose: P: .........................................................
 verbose: 
 verbose: B: *****************************************************************
 verbose: B: BEGIN bundle iptables_filter( {'input','@(rule_array)','1'})
 verbose: B: *****************************************************************
 verbose: V:     +  Private parameter: 'chain_policies' in scope 'iptables_filter' (type: s) in pass 1
 verbose: V:     +  Private parameter: 'rules' in scope 'iptables_filter' (type: s) in pass 1
 verbose: V:     +  Private parameter: 'rules_key' in scope 'iptables_filter' (type: s) in pass 1
 verbose: V: .........................................................
 verbose: V: BEGIN variables (pass 1)
 verbose: V: .........................................................
 verbose: V:     Computing value of "_cache_dir"
 verbose: V:     Computing value of "filter_rules"
 verbose: P: .........................................................
 verbose: P: BEGIN promise 'iptables_dump' of type "methods" (pass 1)
 verbose: P:    Promiser/affected object: 'DUMP CURRENT ACTIVE RULES'
 verbose: P:    From parameterized bundle: iptables_filter( {'/var/cfengine/cache/security/iptables/filter'})
 verbose: P:    Base context class: any
 verbose: P:    Container path : '/default/config_iptables/methods/'iptables_filter'/default/iptables_filter/methods/'DUMP CURRENT ACTIVE RULES'[0]'
 verbose: P: .........................................................
 verbose: 
 verbose: B: *****************************************************************
 verbose: B: BEGIN bundle iptables_dump( {'/var/cfengine/cache/security/iptables/filter'})
 verbose: B: *****************************************************************
 verbose: V:     +  Private parameter: 'cdir' in scope 'iptables_dump' (type: s) in pass 1
 verbose: P: .........................................................
 verbose: P: BEGIN promise 'iptables_create_cache_dir' of type "files" (pass 1)
 verbose: P:    Promiser/affected object: '/var/cfengine/cache/security/iptables/fi'
 verbose: P:    From parameterized bundle: iptables_dump( {'/var/cfengine/cache/security/iptables/filter'})
 verbose: P:    Base context class: any
 verbose: P:    Container path : '/default/config_iptables/methods/'iptables_filter'/default/iptables_filter/methods/'DUMP CURRENT ACTIVE RULES'/default/iptables_dump/files/'/var/cfengine/cache/security/iptables/filter/.'[0]'
 verbose: P: .........................................................
 verbose: 
 verbose: Using literal pathtype for '/var/cfengine/cache/security/iptables/filter/.'
 verbose: Additional promise info: handle 'iptables_create_cache_dir' source path './main.cf' at line 140
 verbose: File '/var/cfengine/cache/security/iptables/filter/.' exists as promised
 verbose: A: Promise was KEPT
 verbose: P: END files promise (/var/cfengine/cache/security/i...)
 verbose: Skipping promise '/var/cfengine/cache/security/iptables/filter/cf.iptables.filter.current', as promise dependency 'iptables_filter_save' has not yet been kept
 verbose: P: .........................................................
 verbose: P: BEGIN promise 'iptables_filter_save' of type "commands" (pass 1)
 verbose: P:    Promiser/affected object: '/sbin/iptables-save -t filter > /var/cfe'
 verbose: P:    From parameterized bundle: iptables_dump( {'/var/cfengine/cache/security/iptables/filter'})
 verbose: P:    Base context class: any
 verbose: P:    Container path : '/default/config_iptables/methods/'iptables_filter'/default/iptables_filter/methods/'DUMP CURRENT ACTIVE RULES'/default/iptables_dump/commands/'/sbin/iptables-save -t filter > /var/cfengine/cache/security/iptables/filter/cf.iptables.filter.current'[0]'
 verbose: P:
 verbose: P:    Comment:  save current iptables configuration as file to cache directory
 verbose: P: .........................................................
 verbose: 
 verbose: Promiser string contains a valid executable '/sbin/iptables-save' - ok
    info: Executing 'no timeout' ... '/sbin/iptables-save -t filter > /var/cfengine/cache/security/iptables/filter/cf.iptables.filter.current'
 verbose: Setting umask to 77
 verbose: Additional promise info: handle 'iptables_filter_save' source path './main.cf' at line 133 comment 'save current iptables configuration as file to cache directory'
 verbose: Finished command related to promiser '/sbin/iptables-save -t filter > /var/cfengine/cache/security/iptables/filter/cf.iptables.filter.current' -- succeeded
    info: Completed execution of '/sbin/iptables-save -t filter > /var/cfengine/cache/security/iptables/filter/cf.iptables.filter.current'
 verbose: A: Promise REPAIRED
 verbose: P: END commands promise (/sbin/iptables-save -t filter ...)
 verbose: P: .........................................................
 verbose: P: BEGIN promise 'iptables_create_cache_dir' of type "files" (pass 2)
 verbose: P:    Promiser/affected object: '/var/cfengine/cache/security/iptables/fi'
 verbose: P:    From parameterized bundle: iptables_dump( {'/var/cfengine/cache/security/iptables/filter'})
 verbose: P:    Base context class: any
 verbose: P:    Container path : '/default/config_iptables/methods/'iptables_filter'/default/iptables_filter/methods/'DUMP CURRENT ACTIVE RULES'/default/iptables_dump/files/'/var/cfengine/cache/security/iptables/filter/.'[0]'
 verbose: P: .........................................................
 verbose: 
 verbose: Using literal pathtype for '/var/cfengine/cache/security/iptables/filter/.'
 verbose: P: .........................................................
 verbose: P: BEGIN un-named promise of type "files" (pass 2)
 verbose: P:    Promiser/affected object: '/var/cfengine/cache/security/iptables/fi'
 verbose: P:    From parameterized bundle: iptables_dump( {'/var/cfengine/cache/security/iptables/filter'})
 verbose: P:    Base context class: any
 verbose: P:    Container path : '/default/config_iptables/methods/'iptables_filter'/default/iptables_filter/methods/'DUMP CURRENT ACTIVE RULES'/default/iptables_dump/files/'/var/cfengine/cache/security/iptables/filter/cf.iptables.filter.current'[0]'
 verbose: P:
 verbose: P:    Comment:  remove all rules from current file
 verbose: P: .........................................................
 verbose: 
 verbose: Using literal pathtype for '/var/cfengine/cache/security/iptables/filter/cf.iptables.filter.current'
 verbose: Handling file edits in edit_line bundle 'iptables_clean_dump'
 verbose: P: .........................................................
 verbose: P: BEGIN un-named promise of type "delete_lines" (pass 2)
 verbose: P:    Promiser/affected object: '^..:'
 verbose: P:    From parameterized bundle: iptables_clean_dump( {'/var/cfengine/cache/security/iptables/filter'})
 verbose: P:    Base context class: any
 verbose: P:    Container path : '/default/config_iptables/methods/'iptables_filter'/default/iptables_filter/methods/'DUMP CURRENT ACTIVE RULES'/default/iptables_dump/files/'/var/cfengine/cache/security/iptables/filter/cf.iptables.filter.current'/default/iptables_clean_dump/delete_lines/'^..:'[0]'
 verbose: P: .........................................................
 verbose: 
 verbose: Multi-line region (1 lines) matched text in the file
 verbose: Delete chunk of 1 lines
 verbose: Additional promise info: source path './main.cf' at line 164
 verbose: Deleting the promised line 1 '# Generated by iptables-save v1.4.21 on Tue Jun 14 11:33:12 2016' from /var/cfengine/cache/security/iptables/filter/cf.iptables.filter.current
 verbose: Multi-line region (1 lines) matched text in the file
 verbose: Delete chunk of 1 lines
 verbose: Additional promise info: source path './main.cf' at line 164
 verbose: Deleting the promised line 1 '# Completed on Tue Jun 14 11:33:12 2016' from /var/cfengine/cache/security/iptables/filter/cf.iptables.filter.current
 verbose: P: .........................................................
 verbose: P: BEGIN un-named promise of type "replace_patterns" (pass 2)
 verbose: P:    Promiser/affected object: '\s+\[\d+:\d+\]\s:$'
 verbose: P:    From parameterized bundle: iptables_clean_dump( {'/var/cfengine/cache/security/iptables/filter'})
 verbose: P:    Base context class: any
 verbose: P:    Container path : '/default/config_iptables/methods/'iptables_filter'/default/iptables_filter/methods/'DUMP CURRENT ACTIVE RULES'/default/iptables_dump/files/'/var/cfengine/cache/security/iptables/filter/cf.iptables.filter.current'/default/iptables_clean_dump/replace_patterns/'\s+\[\d+:\d+\]\s:$'[0]'
 verbose: P: .........................................................
 verbose: 
 verbose: Looking at pattern '\s+\[\d+:\d+\]\s*$'
 verbose: Verifying replacement of '\s+\[\d+:\d+\]\s*$' with '', cutoff 2
 verbose: Additional promise info: source path './main.cf' at line 166
 verbose: Replaced pattern '\s+\[\d+:\d+\]\s*$' in '/var/cfengine/cache/security/iptables/filter/cf.iptables.filter.current'
 verbose: cutoff 2, ':INPUT ACCEPT'
 verbose: cutoff 2, ':INPUT ACCEPT'
 verbose: Verifying replacement of '\s+\[\d+:\d+\]\s*$' with '', cutoff 2
 verbose: Additional promise info: source path './main.cf' at line 166
 verbose: Replaced pattern '\s+\[\d+:\d+\]\s*$' in '/var/cfengine/cache/security/iptables/filter/cf.iptables.filter.current'
 verbose: cutoff 2, ':FORWARD ACCEPT'
 verbose: cutoff 2, ':FORWARD ACCEPT'
 verbose: Verifying replacement of '\s+\[\d+:\d+\]\s*$' with '', cutoff 2
 verbose: Additional promise info: source path './main.cf' at line 166
 verbose: Replaced pattern '\s+\[\d+:\d+\]\s*$' in '/var/cfengine/cache/security/iptables/filter/cf.iptables.filter.current'
 verbose: cutoff 2, ':OUTPUT ACCEPT'
 verbose: cutoff 2, ':OUTPUT ACCEPT'
 verbose: P: .........................................................
 verbose: P: BEGIN un-named promise of type "replace_patterns" (pass 2)
 verbose: P:    Promiser/affected object: '\s+$'
 verbose: P:    From parameterized bundle: iptables_clean_dump( {'/var/cfengine/cache/security/iptables/filter'})
 verbose: P:    Base context class: any
 verbose: P:    Container path : '/default/config_iptables/methods/'iptables_filter'/default/iptables_filter/methods/'DUMP CURRENT ACTIVE RULES'/default/iptables_dump/files/'/var/cfengine/cache/security/iptables/filter/cf.iptables.filter.current'/default/iptables_clean_dump/replace_patterns/'\s+$'[0]'
 verbose: P: .........................................................
 verbose: 
 verbose: Looking at pattern '\s+$'
 verbose: Additional promise info: source path './main.cf' at line 168
 verbose: No pattern '\s+$' in '/var/cfengine/cache/security/iptables/filter/cf.iptables.filter.current'
 verbose: P: .........................................................
 verbose: P: BEGIN un-named promise of type "delete_lines" (pass 2)
 verbose: P:    Promiser/affected object: '^..:'
 verbose: P:    From parameterized bundle: iptables_clean_dump( {'/var/cfengine/cache/security/iptables/filter'})
 verbose: P:    Base context class: any
 verbose: P:    Container path : '/default/config_iptables/methods/'iptables_filter'/default/iptables_filter/methods/'DUMP CURRENT ACTIVE RULES'/default/iptables_dump/files/'/var/cfengine/cache/security/iptables/filter/cf.iptables.filter.current'/default/iptables_clean_dump/delete_lines/'^..:'[0]'
 verbose: P: .........................................................
 verbose: 
 verbose: P: .........................................................
 verbose: P: BEGIN un-named promise of type "replace_patterns" (pass 2)
 verbose: P:    Promiser/affected object: '\s+\[\d+:\d+\]\s:$'
 verbose: P:    From parameterized bundle: iptables_clean_dump( {'/var/cfengine/cache/security/iptables/filter'})
 verbose: P:    Base context class: any
 verbose: P:    Container path : '/default/config_iptables/methods/'iptables_filter'/default/iptables_filter/methods/'DUMP CURRENT ACTIVE RULES'/default/iptables_dump/files/'/var/cfengine/cache/security/iptables/filter/cf.iptables.filter.current'/default/iptables_clean_dump/replace_patterns/'\s+\[\d+:\d+\]\s:$'[0]'
 verbose: P: .........................................................
 verbose: 
 verbose: Looking at pattern '\s+\[\d+:\d+\]\s*$'
 verbose: P: .........................................................
 verbose: P: BEGIN un-named promise of type "replace_patterns" (pass 2)
 verbose: P:    Promiser/affected object: '\s+$'
 verbose: P:    From parameterized bundle: iptables_clean_dump( {'/var/cfengine/cache/security/iptables/filter'})
 verbose: P:    Base context class: any
 verbose: P:    Container path : '/default/config_iptables/methods/'iptables_filter'/default/iptables_filter/methods/'DUMP CURRENT ACTIVE RULES'/default/iptables_dump/files/'/var/cfengine/cache/security/iptables/filter/cf.iptables.filter.current'/default/iptables_clean_dump/replace_patterns/'\s+$'[0]'
 verbose: P: .........................................................
 verbose: 
 verbose: Looking at pattern '\s+$'
 verbose: P: .........................................................
 verbose: P: BEGIN un-named promise of type "delete_lines" (pass 2)
 verbose: P:    Promiser/affected object: '^..:'
 verbose: P:    From parameterized bundle: iptables_clean_dump( {'/var/cfengine/cache/security/iptables/filter'})
 verbose: P:    Base context class: any
 verbose: P:    Container path : '/default/config_iptables/methods/'iptables_filter'/default/iptables_filter/methods/'DUMP CURRENT ACTIVE RULES'/default/iptables_dump/files/'/var/cfengine/cache/security/iptables/filter/cf.iptables.filter.current'/default/iptables_clean_dump/delete_lines/'^..:'[0]'
 verbose: P: .........................................................
 verbose: 
 verbose: P: .........................................................
 verbose: P: BEGIN un-named promise of type "replace_patterns" (pass 2)
 verbose: P:    Promiser/affected object: '\s+\[\d+:\d+\]\s:$'
 verbose: P:    From parameterized bundle: iptables_clean_dump( {'/var/cfengine/cache/security/iptables/filter'})
 verbose: P:    Base context class: any
 verbose: P:    Container path : '/default/config_iptables/methods/'iptables_filter'/default/iptables_filter/methods/'DUMP CURRENT ACTIVE RULES'/default/iptables_dump/files/'/var/cfengine/cache/security/iptables/filter/cf.iptables.filter.current'/default/iptables_clean_dump/replace_patterns/'\s+\[\d+:\d+\]\s:$'[0]'
 verbose: P: .........................................................
 verbose: 
 verbose: Looking at pattern '\s+\[\d+:\d+\]\s*$'
 verbose: P: .........................................................
 verbose: P: BEGIN un-named promise of type "replace_patterns" (pass 2)
 verbose: P:    Promiser/affected object: '\s+$'
 verbose: P:    From parameterized bundle: iptables_clean_dump( {'/var/cfengine/cache/security/iptables/filter'})
 verbose: P:    Base context class: any
 verbose: P:    Container path : '/default/config_iptables/methods/'iptables_filter'/default/iptables_filter/methods/'DUMP CURRENT ACTIVE RULES'/default/iptables_dump/files/'/var/cfengine/cache/security/iptables/filter/cf.iptables.filter.current'/default/iptables_clean_dump/replace_patterns/'\s+$'[0]'
 verbose: P: .........................................................
 verbose: 
 verbose: Looking at pattern '\s+$'
    info: Edit file '/var/cfengine/cache/security/iptables/filter/cf.iptables.filter.current'
 verbose: Handling file existence constraints on '/var/cfengine/cache/security/iptables/filter/cf.iptables.filter.current'
 verbose: A: Promise REPAIRED
 verbose: P: END files promise (/var/cfengine/cache/security/i...)
 verbose: P: .........................................................
 verbose: P: BEGIN promise 'iptables_create_cache_dir' of type "files" (pass 3)
 verbose: P:    Promiser/affected object: '/var/cfengine/cache/security/iptables/fi'
 verbose: P:    From parameterized bundle: iptables_dump( {'/var/cfengine/cache/security/iptables/filter'})
 verbose: P:    Base context class: any
 verbose: P:    Container path : '/default/config_iptables/methods/'iptables_filter'/default/iptables_filter/methods/'DUMP CURRENT ACTIVE RULES'/default/iptables_dump/files/'/var/cfengine/cache/security/iptables/filter/.'[0]'
 verbose: P: .........................................................
 verbose: 
 verbose: Using literal pathtype for '/var/cfengine/cache/security/iptables/filter/.'
 verbose: P: .........................................................
 verbose: P: BEGIN un-named promise of type "files" (pass 3)
 verbose: P:    Promiser/affected object: '/var/cfengine/cache/security/iptables/fi'
 verbose: P:    From parameterized bundle: iptables_dump( {'/var/cfengine/cache/security/iptables/filter'})
 verbose: P:    Base context class: any
 verbose: P:    Container path : '/default/config_iptables/methods/'iptables_filter'/default/iptables_filter/methods/'DUMP CURRENT ACTIVE RULES'/default/iptables_dump/files/'/var/cfengine/cache/security/iptables/filter/cf.iptables.filter.current'[0]'
 verbose: P:
 verbose: P:    Comment:  remove all rules from current file
 verbose: P: .........................................................
 verbose: 
 verbose: Using literal pathtype for '/var/cfengine/cache/security/iptables/filter/cf.iptables.filter.current'
 verbose: 
 verbose: A: ...................................................
 verbose: A: Bundle Accounting Summary for 'iptables_dump' in namespace default
 verbose: A: Promises kept in 'iptables_dump' = 1
 verbose: A: Promises not kept in 'iptables_dump' = 0
 verbose: A: Promises repaired in 'iptables_dump' = 2
 verbose: A: Aggregate compliance (promises kept/repaired) for bundle 'iptables_dump' = 100.0%
 verbose: A: ...................................................
 verbose: 
 verbose: Additional promise info: handle 'iptables_dump' source path './main.cf' at line 94
 verbose: Method 'iptables_dump' invoked repairs
 verbose: B: *****************************************************************
 verbose: B: END bundle iptables_dump
 verbose: B: *****************************************************************
 verbose: A: Promise REPAIRED
 verbose: P: END methods promise (DUMP CURRENT ACTIVE RULES...)
 verbose: P: .........................................................
 verbose: P: BEGIN un-named promise of type "methods" (pass 1)
 verbose: P:    Promiser/affected object: 'CHECK IPTABLES RULES AND APPLY'
 verbose: P:    From parameterized bundle: iptables_filter( {'/var/cfengine/cache/security/iptables/filter','input','@(rules)'})
 verbose: P:    Base context class: any
 verbose: P:    Container path : '/default/config_iptables/methods/'iptables_filter'/default/iptables_filter/methods/'CHECK IPTABLES RULES AND APPLY'[0]'
 verbose: P: .........................................................
 verbose: 
 verbose: B: *****************************************************************
 verbose: B: BEGIN bundle iptables_check( {'/var/cfengine/cache/security/iptables/filter','input','@(rules)'})
 verbose: B: *****************************************************************
 verbose: V:     +  Private parameter: 'cdir' in scope 'iptables_check' (type: s) in pass 1
 verbose: V:     +  Private parameter: 'chain_policies' in scope 'iptables_check' (type: s) in pass 1
 verbose: V:     +  Private parameter: 'filter_rules' in scope 'iptables_check' (type: s) in pass 1
 verbose: P: .........................................................
 verbose: P: BEGIN un-named promise of type "files" (pass 1)
 verbose: P:    Promiser/affected object: '/var/cfengine/cache/security/iptables/fi'
 verbose: P:    From parameterized bundle: iptables_check( {'/var/cfengine/cache/security/iptables/filter','input','@(rules)'})
 verbose: P:    Base context class: any
 verbose: P:    Container path : '/default/config_iptables/methods/'iptables_filter'/default/iptables_filter/methods/'CHECK IPTABLES RULES AND APPLY'/default/iptables_check/files/'/var/cfengine/cache/security/iptables/filter/cf.iptables.filter.current'[0]'
 verbose: P: .........................................................
 verbose: 
 verbose: File '/var/cfengine/cache/security/iptables/filter/cf.iptables.filter.current' copy_from '/var/cfengine/cache/security/iptables/filter/cf.iptables.filter.policy'
 verbose: Destination file '/var/cfengine/cache/security/iptables/filter/cf.iptables.filter.current' already exists
 verbose: Image file '/var/cfengine/cache/security/iptables/filter/cf.iptables.filter.current' has a wrong digest/checksum, should be copy of '/var/cfengine/cache/security/iptables/filter/cf.iptables.filter.policy'
 verbose: Copy of regular file succeeded '/var/cfengine/cache/security/iptables/filter/cf.iptables.filter.policy' to '/var/cfengine/cache/security/iptables/filter/cf.iptables.filter.current.cfnew'
    info: Updated '/var/cfengine/cache/security/iptables/filter/cf.iptables.filter.current' from source '/var/cfengine/cache/security/iptables/filter/cf.iptables.filter.policy' on 'localhost'
 verbose: 
 verbose: C:    + promise outcome class 'iptables_filter_repaired'
 verbose: 
 verbose: Additional promise info: source path './main.cf' at line 120
 verbose: File permissions on '/var/cfengine/cache/security/iptables/filter/cf.iptables.filter.current' as promised
 verbose: Handling file existence constraints on '/var/cfengine/cache/security/iptables/filter/cf.iptables.filter.current'
 verbose: A: Promise REPAIRED
 verbose: P: END files promise (/var/cfengine/cache/security/i...)
 verbose: P: .........................................................
 verbose: P: BEGIN un-named promise of type "files" (pass 2)
 verbose: P:    Promiser/affected object: '/var/cfengine/cache/security/iptables/fi'
 verbose: P:    From parameterized bundle: iptables_check( {'/var/cfengine/cache/security/iptables/filter','input','@(rules)'})
 verbose: P:    Base context class: any
 verbose: P:    Container path : '/default/config_iptables/methods/'iptables_filter'/default/iptables_filter/methods/'CHECK IPTABLES RULES AND APPLY'/default/iptables_check/files/'/var/cfengine/cache/security/iptables/filter/cf.iptables.filter.current'[0]'
 verbose: P: .........................................................
 verbose: 
 verbose: P: .........................................................
 verbose: P: BEGIN un-named promise of type "files" (pass 3)
 verbose: P:    Promiser/affected object: '/var/cfengine/cache/security/iptables/fi'
 verbose: P:    From parameterized bundle: iptables_check( {'/var/cfengine/cache/security/iptables/filter','input','@(rules)'})
 verbose: P:    Base context class: any
 verbose: P:    Container path : '/default/config_iptables/methods/'iptables_filter'/default/iptables_filter/methods/'CHECK IPTABLES RULES AND APPLY'/default/iptables_check/files/'/var/cfengine/cache/security/iptables/filter/cf.iptables.filter.current'[0]'
 verbose: P: .........................................................
 verbose: 
 verbose: 
 verbose: A: ...................................................
 verbose: A: Bundle Accounting Summary for 'iptables_check' in namespace default
 verbose: A: Promises kept in 'iptables_check' = 1
 verbose: A: Promises not kept in 'iptables_check' = 0
 verbose: A: Promises repaired in 'iptables_check' = 1
 verbose: A: Aggregate compliance (promises kept/repaired) for bundle 'iptables_check' = 100.0%
 verbose: A: ...................................................
 verbose: 
 verbose: Additional promise info: source path './main.cf' at line 99
 verbose: Method 'iptables_check' invoked repairs
 verbose: B: *****************************************************************
 verbose: B: END bundle iptables_check
 verbose: B: *****************************************************************
 verbose: A: Promise REPAIRED
 verbose: P: END methods promise (CHECK IPTABLES RULES AND APPLY...)
 verbose: V: .........................................................
 verbose: V: BEGIN variables (pass 2)
 verbose: V: .........................................................
 verbose: V:     Computing value of "_cache_dir"
 verbose: V:     Computing value of "filter_rules"
 verbose: V: .........................................................
 verbose: V: BEGIN variables (pass 3)
 verbose: V: .........................................................
 verbose: V:     Computing value of "_cache_dir"
 verbose: V:     Computing value of "filter_rules"
 verbose: 
 verbose: A: ...................................................
 verbose: A: Bundle Accounting Summary for 'iptables_filter' in namespace default
 verbose: A: Promises kept in 'iptables_filter' = 2
 verbose: A: Promises not kept in 'iptables_filter' = 0
 verbose: A: Promises repaired in 'iptables_filter' = 5
 verbose: A: Aggregate compliance (promises kept/repaired) for bundle 'iptables_filter' = 100.0%
 verbose: A: ...................................................
 verbose: 
 verbose: Additional promise info: source path './main.cf' at line 42 comment 'pass iptables policies and rules (plus rule_key) read in from external file.'
 verbose: Method 'iptables_filter' invoked repairs
 verbose: B: *****************************************************************
 verbose: B: END bundle iptables_filter
 verbose: B: *****************************************************************
 verbose: A: Promise REPAIRED
 verbose: P: END methods promise (iptables_filter...)
 verbose: P: .........................................................
 verbose: P: BEGIN un-named promise of type "methods" (pass 3)
 verbose: P:    Promiser/affected object: 'iptables_filter'
 verbose: P:    From parameterized bundle: config_iptables( {'output','@(rule_array)','1'})
 verbose: P:    Base context class: any
 verbose: P:    Container path : '/default/config_iptables/methods/'iptables_filter'[1]'
 verbose: P:
 verbose: P:    Comment:  pass iptables policies and rules (plus rule_key) read in from external file.
 verbose: P: .........................................................
 verbose: 
 verbose: B: *****************************************************************
 verbose: B: BEGIN bundle iptables_filter( {'output','@(rule_array)','1'})
 verbose: B: *****************************************************************
 verbose: V:     +  Private parameter: 'chain_policies' in scope 'iptables_filter' (type: s) in pass 3
 verbose: V:     +  Private parameter: 'rules' in scope 'iptables_filter' (type: s) in pass 3
 verbose: V:     +  Private parameter: 'rules_key' in scope 'iptables_filter' (type: s) in pass 3
 verbose: V: .........................................................
 verbose: V: BEGIN variables (pass 1)
 verbose: V: .........................................................
 verbose: V:     Computing value of "_cache_dir"
 verbose: V:     Computing value of "filter_rules"
 verbose: P: .........................................................
 verbose: P: BEGIN un-named promise of type "methods" (pass 1)
 verbose: P:    Promiser/affected object: 'CHECK IPTABLES RULES AND APPLY'
 verbose: P:    From parameterized bundle: iptables_filter( {'/var/cfengine/cache/security/iptables/filter','output','@(rules)'})
 verbose: P:    Base context class: any
 verbose: P:    Container path : '/default/config_iptables/methods/'iptables_filter'/default/iptables_filter/methods/'CHECK IPTABLES RULES AND APPLY'[0]'
 verbose: P: .........................................................
 verbose: 
 verbose: B: *****************************************************************
 verbose: B: BEGIN bundle iptables_check( {'/var/cfengine/cache/security/iptables/filter','output','@(rules)'})
 verbose: B: *****************************************************************
 verbose: V:     +  Private parameter: 'cdir' in scope 'iptables_check' (type: s) in pass 1
 verbose: V:     +  Private parameter: 'chain_policies' in scope 'iptables_check' (type: s) in pass 1
 verbose: V:     +  Private parameter: 'filter_rules' in scope 'iptables_check' (type: s) in pass 1
 verbose: P: .........................................................
 verbose: P: BEGIN un-named promise of type "files" (pass 1)
 verbose: P:    Promiser/affected object: '/var/cfengine/cache/security/iptables/fi'
 verbose: P:    From parameterized bundle: iptables_check( {'/var/cfengine/cache/security/iptables/filter','output','@(rules)'})
 verbose: P:    Base context class: any
 verbose: P:    Container path : '/default/config_iptables/methods/'iptables_filter'/default/iptables_filter/methods/'CHECK IPTABLES RULES AND APPLY'/default/iptables_check/files/'/var/cfengine/cache/security/iptables/filter/cf.iptables.filter.current'[0]'
 verbose: P: .........................................................
 verbose: 
 verbose: P: .........................................................
 verbose: P: BEGIN un-named promise of type "files" (pass 2)
 verbose: P:    Promiser/affected object: '/var/cfengine/cache/security/iptables/fi'
 verbose: P:    From parameterized bundle: iptables_check( {'/var/cfengine/cache/security/iptables/filter','output','@(rules)'})
 verbose: P:    Base context class: any
 verbose: P:    Container path : '/default/config_iptables/methods/'iptables_filter'/default/iptables_filter/methods/'CHECK IPTABLES RULES AND APPLY'/default/iptables_check/files/'/var/cfengine/cache/security/iptables/filter/cf.iptables.filter.current'[0]'
 verbose: P: .........................................................
 verbose: 
 verbose: P: .........................................................
 verbose: P: BEGIN un-named promise of type "files" (pass 3)
 verbose: P:    Promiser/affected object: '/var/cfengine/cache/security/iptables/fi'
 verbose: P:    From parameterized bundle: iptables_check( {'/var/cfengine/cache/security/iptables/filter','output','@(rules)'})
 verbose: P:    Base context class: any
 verbose: P:    Container path : '/default/config_iptables/methods/'iptables_filter'/default/iptables_filter/methods/'CHECK IPTABLES RULES AND APPLY'/default/iptables_check/files/'/var/cfengine/cache/security/iptables/filter/cf.iptables.filter.current'[0]'
 verbose: P: .........................................................
 verbose: 
 verbose: 
 verbose: A: ...................................................
 verbose: A: Bundle Accounting Summary for 'iptables_check' in namespace default
 verbose: A: Zero promises executed for bundle 'iptables_check'
 verbose: A: ...................................................
 verbose: 
 verbose: Additional promise info: source path './main.cf' at line 99
 verbose: Method 'iptables_check' verified
 verbose: B: *****************************************************************
 verbose: B: END bundle iptables_check
 verbose: B: *****************************************************************
 verbose: A: Promise was KEPT
 verbose: P: END methods promise (CHECK IPTABLES RULES AND APPLY...)
 verbose: V: .........................................................
 verbose: V: BEGIN variables (pass 2)
 verbose: V: .........................................................
 verbose: V:     Computing value of "_cache_dir"
 verbose: V:     Computing value of "filter_rules"
 verbose: V: .........................................................
 verbose: V: BEGIN variables (pass 3)
 verbose: V: .........................................................
 verbose: V:     Computing value of "_cache_dir"
 verbose: V:     Computing value of "filter_rules"
 verbose: 
 verbose: A: ...................................................
 verbose: A: Bundle Accounting Summary for 'iptables_filter' in namespace default
 verbose: A: Promises kept in 'iptables_filter' = 1
 verbose: A: Promises not kept in 'iptables_filter' = 0
 verbose: A: Promises repaired in 'iptables_filter' = 0
 verbose: A: Aggregate compliance (promises kept/repaired) for bundle 'iptables_filter' = 100.0%
 verbose: A: ...................................................
 verbose: 
 verbose: Additional promise info: source path './main.cf' at line 42 comment 'pass iptables policies and rules (plus rule_key) read in from external file.'
 verbose: Method 'iptables_filter' verified
 verbose: B: *****************************************************************
 verbose: B: END bundle iptables_filter
 verbose: B: *****************************************************************
 verbose: A: Promise was KEPT
 verbose: P: END methods promise (iptables_filter...)
 verbose: P: .........................................................
 verbose: P: BEGIN un-named promise of type "methods" (pass 3)
 verbose: P:    Promiser/affected object: 'iptables_filter'
 verbose: P:    From parameterized bundle: config_iptables( {'forward','@(rule_array)','1'})
 verbose: P:    Base context class: any
 verbose: P:    Container path : '/default/config_iptables/methods/'iptables_filter'[2]'
 verbose: P:
 verbose: P:    Comment:  pass iptables policies and rules (plus rule_key) read in from external file.
 verbose: P: .........................................................
 verbose: 
 verbose: B: *****************************************************************
 verbose: B: BEGIN bundle iptables_filter( {'forward','@(rule_array)','1'})
 verbose: B: *****************************************************************
 verbose: V:     +  Private parameter: 'chain_policies' in scope 'iptables_filter' (type: s) in pass 3
 verbose: V:     +  Private parameter: 'rules' in scope 'iptables_filter' (type: s) in pass 3
 verbose: V:     +  Private parameter: 'rules_key' in scope 'iptables_filter' (type: s) in pass 3
 verbose: V: .........................................................
 verbose: V: BEGIN variables (pass 1)
 verbose: V: .........................................................
 verbose: V:     Computing value of "_cache_dir"
 verbose: V:     Computing value of "filter_rules"
 verbose: P: .........................................................
 verbose: P: BEGIN un-named promise of type "methods" (pass 1)
 verbose: P:    Promiser/affected object: 'CHECK IPTABLES RULES AND APPLY'
 verbose: P:    From parameterized bundle: iptables_filter( {'/var/cfengine/cache/security/iptables/filter','forward','@(rules)'})
 verbose: P:    Base context class: any
 verbose: P:    Container path : '/default/config_iptables/methods/'iptables_filter'/default/iptables_filter/methods/'CHECK IPTABLES RULES AND APPLY'[0]'
 verbose: P: .........................................................
 verbose: 
 verbose: B: *****************************************************************
 verbose: B: BEGIN bundle iptables_check( {'/var/cfengine/cache/security/iptables/filter','forward','@(rules)'})
 verbose: B: *****************************************************************
 verbose: V:     +  Private parameter: 'cdir' in scope 'iptables_check' (type: s) in pass 1
 verbose: V:     +  Private parameter: 'chain_policies' in scope 'iptables_check' (type: s) in pass 1
 verbose: V:     +  Private parameter: 'filter_rules' in scope 'iptables_check' (type: s) in pass 1
 verbose: P: .........................................................
 verbose: P: BEGIN un-named promise of type "files" (pass 1)
 verbose: P:    Promiser/affected object: '/var/cfengine/cache/security/iptables/fi'
 verbose: P:    From parameterized bundle: iptables_check( {'/var/cfengine/cache/security/iptables/filter','forward','@(rules)'})
 verbose: P:    Base context class: any
 verbose: P:    Container path : '/default/config_iptables/methods/'iptables_filter'/default/iptables_filter/methods/'CHECK IPTABLES RULES AND APPLY'/default/iptables_check/files/'/var/cfengine/cache/security/iptables/filter/cf.iptables.filter.current'[0]'
 verbose: P: .........................................................
 verbose: 
 verbose: P: .........................................................
 verbose: P: BEGIN un-named promise of type "files" (pass 2)
 verbose: P:    Promiser/affected object: '/var/cfengine/cache/security/iptables/fi'
 verbose: P:    From parameterized bundle: iptables_check( {'/var/cfengine/cache/security/iptables/filter','forward','@(rules)'})
 verbose: P:    Base context class: any
 verbose: P:    Container path : '/default/config_iptables/methods/'iptables_filter'/default/iptables_filter/methods/'CHECK IPTABLES RULES AND APPLY'/default/iptables_check/files/'/var/cfengine/cache/security/iptables/filter/cf.iptables.filter.current'[0]'
 verbose: P: .........................................................
 verbose: 
 verbose: P: .........................................................
 verbose: P: BEGIN un-named promise of type "files" (pass 3)
 verbose: P:    Promiser/affected object: '/var/cfengine/cache/security/iptables/fi'
 verbose: P:    From parameterized bundle: iptables_check( {'/var/cfengine/cache/security/iptables/filter','forward','@(rules)'})
 verbose: P:    Base context class: any
 verbose: P:    Container path : '/default/config_iptables/methods/'iptables_filter'/default/iptables_filter/methods/'CHECK IPTABLES RULES AND APPLY'/default/iptables_check/files/'/var/cfengine/cache/security/iptables/filter/cf.iptables.filter.current'[0]'
 verbose: P: .........................................................
 verbose: 
 verbose: 
 verbose: A: ...................................................
 verbose: A: Bundle Accounting Summary for 'iptables_check' in namespace default
 verbose: A: Zero promises executed for bundle 'iptables_check'
 verbose: A: ...................................................
 verbose: 
 verbose: Additional promise info: source path './main.cf' at line 99
 verbose: Method 'iptables_check' verified
 verbose: B: *****************************************************************
 verbose: B: END bundle iptables_check
 verbose: B: *****************************************************************
 verbose: A: Promise was KEPT
 verbose: P: END methods promise (CHECK IPTABLES RULES AND APPLY...)
 verbose: V: .........................................................
 verbose: V: BEGIN variables (pass 2)
 verbose: V: .........................................................
 verbose: V:     Computing value of "_cache_dir"
 verbose: V:     Computing value of "filter_rules"
 verbose: V: .........................................................
 verbose: V: BEGIN variables (pass 3)
 verbose: V: .........................................................
 verbose: V:     Computing value of "_cache_dir"
 verbose: V:     Computing value of "filter_rules"
 verbose: 
 verbose: A: ...................................................
 verbose: A: Bundle Accounting Summary for 'iptables_filter' in namespace default
 verbose: A: Promises kept in 'iptables_filter' = 1
 verbose: A: Promises not kept in 'iptables_filter' = 0
 verbose: A: Promises repaired in 'iptables_filter' = 0
 verbose: A: Aggregate compliance (promises kept/repaired) for bundle 'iptables_filter' = 100.0%
 verbose: A: ...................................................
 verbose: 
 verbose: Additional promise info: source path './main.cf' at line 42 comment 'pass iptables policies and rules (plus rule_key) read in from external file.'
 verbose: Method 'iptables_filter' verified
 verbose: B: *****************************************************************
 verbose: B: END bundle iptables_filter
 verbose: B: *****************************************************************
 verbose: A: Promise was KEPT
 verbose: P: END methods promise (iptables_filter...)
 verbose: P: .........................................................
 verbose: P: BEGIN un-named promise of type "methods" (pass 3)
 verbose: P:    Promiser/affected object: 'iptables_filter'
 verbose: P:    From parameterized bundle: config_iptables( {'input','@(rule_array)','2'})
 verbose: P:    Base context class: any
 verbose: P:    Container path : '/default/config_iptables/methods/'iptables_filter'[3]'
 verbose: P:
 verbose: P:    Comment:  pass iptables policies and rules (plus rule_key) read in from external file.
 verbose: P: .........................................................
 verbose: 
 verbose: B: *****************************************************************
 verbose: B: BEGIN bundle iptables_filter( {'input','@(rule_array)','2'})
 verbose: B: *****************************************************************
 verbose: V:     +  Private parameter: 'chain_policies' in scope 'iptables_filter' (type: s) in pass 3
 verbose: V:     +  Private parameter: 'rules' in scope 'iptables_filter' (type: s) in pass 3
 verbose: V:     +  Private parameter: 'rules_key' in scope 'iptables_filter' (type: s) in pass 3
 verbose: V: .........................................................
 verbose: V: BEGIN variables (pass 1)
 verbose: V: .........................................................
 verbose: V:     Computing value of "_cache_dir"
 verbose: V:     Computing value of "filter_rules"
 verbose: V: .........................................................
 verbose: V: BEGIN variables (pass 2)
 verbose: V: .........................................................
 verbose: V:     Computing value of "_cache_dir"
 verbose: V:     Computing value of "filter_rules"
 verbose: V: .........................................................
 verbose: V: BEGIN variables (pass 3)
 verbose: V: .........................................................
 verbose: V:     Computing value of "_cache_dir"
 verbose: V:     Computing value of "filter_rules"
 verbose: 
 verbose: A: ...................................................
 verbose: A: Bundle Accounting Summary for 'iptables_filter' in namespace default
 verbose: A: Zero promises executed for bundle 'iptables_filter'
 verbose: A: ...................................................
 verbose: 
 verbose: Additional promise info: source path './main.cf' at line 42 comment 'pass iptables policies and rules (plus rule_key) read in from external file.'
 verbose: Method 'iptables_filter' verified
 verbose: B: *****************************************************************
 verbose: B: END bundle iptables_filter
 verbose: B: *****************************************************************
 verbose: A: Promise was KEPT
 verbose: P: END methods promise (iptables_filter...)
 verbose: P: .........................................................
 verbose: P: BEGIN un-named promise of type "methods" (pass 3)
 verbose: P:    Promiser/affected object: 'iptables_filter'
 verbose: P:    From parameterized bundle: config_iptables( {'output','@(rule_array)','2'})
 verbose: P:    Base context class: any
 verbose: P:    Container path : '/default/config_iptables/methods/'iptables_filter'[4]'
 verbose: P:
 verbose: P:    Comment:  pass iptables policies and rules (plus rule_key) read in from external file.
 verbose: P: .........................................................
 verbose: 
 verbose: B: *****************************************************************
 verbose: B: BEGIN bundle iptables_filter( {'output','@(rule_array)','2'})
 verbose: B: *****************************************************************
 verbose: V:     +  Private parameter: 'chain_policies' in scope 'iptables_filter' (type: s) in pass 3
 verbose: V:     +  Private parameter: 'rules' in scope 'iptables_filter' (type: s) in pass 3
 verbose: V:     +  Private parameter: 'rules_key' in scope 'iptables_filter' (type: s) in pass 3
 verbose: V: .........................................................
 verbose: V: BEGIN variables (pass 1)
 verbose: V: .........................................................
 verbose: V:     Computing value of "_cache_dir"
 verbose: V:     Computing value of "filter_rules"
 verbose: V: .........................................................
 verbose: V: BEGIN variables (pass 2)
 verbose: V: .........................................................
 verbose: V:     Computing value of "_cache_dir"
 verbose: V:     Computing value of "filter_rules"
 verbose: V: .........................................................
 verbose: V: BEGIN variables (pass 3)
 verbose: V: .........................................................
 verbose: V:     Computing value of "_cache_dir"
 verbose: V:     Computing value of "filter_rules"
 verbose: 
 verbose: A: ...................................................
 verbose: A: Bundle Accounting Summary for 'iptables_filter' in namespace default
 verbose: A: Zero promises executed for bundle 'iptables_filter'
 verbose: A: ...................................................
 verbose: 
 verbose: Additional promise info: source path './main.cf' at line 42 comment 'pass iptables policies and rules (plus rule_key) read in from external file.'
 verbose: Method 'iptables_filter' verified
 verbose: B: *****************************************************************
 verbose: B: END bundle iptables_filter
 verbose: B: *****************************************************************
 verbose: A: Promise was KEPT
 verbose: P: END methods promise (iptables_filter...)
 verbose: P: .........................................................
 verbose: P: BEGIN un-named promise of type "methods" (pass 3)
 verbose: P:    Promiser/affected object: 'iptables_filter'
 verbose: P:    From parameterized bundle: config_iptables( {'forward','@(rule_array)','2'})
 verbose: P:    Base context class: any
 verbose: P:    Container path : '/default/config_iptables/methods/'iptables_filter'[5]'
 verbose: P:
 verbose: P:    Comment:  pass iptables policies and rules (plus rule_key) read in from external file.
 verbose: P: .........................................................
 verbose: 
 verbose: B: *****************************************************************
 verbose: B: BEGIN bundle iptables_filter( {'forward','@(rule_array)','2'})
 verbose: B: *****************************************************************
 verbose: V:     +  Private parameter: 'chain_policies' in scope 'iptables_filter' (type: s) in pass 3
 verbose: V:     +  Private parameter: 'rules' in scope 'iptables_filter' (type: s) in pass 3
 verbose: V:     +  Private parameter: 'rules_key' in scope 'iptables_filter' (type: s) in pass 3
 verbose: V: .........................................................
 verbose: V: BEGIN variables (pass 1)
 verbose: V: .........................................................
 verbose: V:     Computing value of "_cache_dir"
 verbose: V:     Computing value of "filter_rules"
 verbose: V: .........................................................
 verbose: V: BEGIN variables (pass 2)
 verbose: V: .........................................................
 verbose: V:     Computing value of "_cache_dir"
 verbose: V:     Computing value of "filter_rules"
 verbose: V: .........................................................
 verbose: V: BEGIN variables (pass 3)
 verbose: V: .........................................................
 verbose: V:     Computing value of "_cache_dir"
 verbose: V:     Computing value of "filter_rules"
 verbose: 
 verbose: A: ...................................................
 verbose: A: Bundle Accounting Summary for 'iptables_filter' in namespace default
 verbose: A: Zero promises executed for bundle 'iptables_filter'
 verbose: A: ...................................................
 verbose: 
 verbose: Additional promise info: source path './main.cf' at line 42 comment 'pass iptables policies and rules (plus rule_key) read in from external file.'
 verbose: Method 'iptables_filter' verified
 verbose: B: *****************************************************************
 verbose: B: END bundle iptables_filter
 verbose: B: *****************************************************************
 verbose: A: Promise was KEPT
 verbose: P: END methods promise (iptables_filter...)
 verbose: P: .........................................................
 verbose: P: BEGIN un-named promise of type "methods" (pass 3)
 verbose: P:    Promiser/affected object: 'iptables_filter'
 verbose: P:    From parameterized bundle: config_iptables( {'input','@(rule_array)','1000'})
 verbose: P:    Base context class: any
 verbose: P:    Container path : '/default/config_iptables/methods/'iptables_filter'[6]'
 verbose: P:
 verbose: P:    Comment:  pass iptables policies and rules (plus rule_key) read in from external file.
 verbose: P: .........................................................
 verbose: 
 verbose: B: *****************************************************************
 verbose: B: BEGIN bundle iptables_filter( {'input','@(rule_array)','1000'})
 verbose: B: *****************************************************************
 verbose: V:     +  Private parameter: 'chain_policies' in scope 'iptables_filter' (type: s) in pass 3
 verbose: V:     +  Private parameter: 'rules' in scope 'iptables_filter' (type: s) in pass 3
 verbose: V:     +  Private parameter: 'rules_key' in scope 'iptables_filter' (type: s) in pass 3
 verbose: V: .........................................................
 verbose: V: BEGIN variables (pass 1)
 verbose: V: .........................................................
 verbose: V:     Computing value of "_cache_dir"
 verbose: V:     Computing value of "filter_rules"
 verbose: V: .........................................................
 verbose: V: BEGIN variables (pass 2)
 verbose: V: .........................................................
 verbose: V:     Computing value of "_cache_dir"
 verbose: V:     Computing value of "filter_rules"
 verbose: V: .........................................................
 verbose: V: BEGIN variables (pass 3)
 verbose: V: .........................................................
 verbose: V:     Computing value of "_cache_dir"
 verbose: V:     Computing value of "filter_rules"
 verbose: 
 verbose: A: ...................................................
 verbose: A: Bundle Accounting Summary for 'iptables_filter' in namespace default
 verbose: A: Zero promises executed for bundle 'iptables_filter'
 verbose: A: ...................................................
 verbose: 
 verbose: Additional promise info: source path './main.cf' at line 42 comment 'pass iptables policies and rules (plus rule_key) read in from external file.'
 verbose: Method 'iptables_filter' verified
 verbose: B: *****************************************************************
 verbose: B: END bundle iptables_filter
 verbose: B: *****************************************************************
 verbose: A: Promise was KEPT
 verbose: P: END methods promise (iptables_filter...)
 verbose: P: .........................................................
 verbose: P: BEGIN un-named promise of type "methods" (pass 3)
 verbose: P:    Promiser/affected object: 'iptables_filter'
 verbose: P:    From parameterized bundle: config_iptables( {'output','@(rule_array)','1000'})
 verbose: P:    Base context class: any
 verbose: P:    Container path : '/default/config_iptables/methods/'iptables_filter'[7]'
 verbose: P:
 verbose: P:    Comment:  pass iptables policies and rules (plus rule_key) read in from external file.
 verbose: P: .........................................................
 verbose: 
 verbose: B: *****************************************************************
 verbose: B: BEGIN bundle iptables_filter( {'output','@(rule_array)','1000'})
 verbose: B: *****************************************************************
 verbose: V:     +  Private parameter: 'chain_policies' in scope 'iptables_filter' (type: s) in pass 3
 verbose: V:     +  Private parameter: 'rules' in scope 'iptables_filter' (type: s) in pass 3
 verbose: V:     +  Private parameter: 'rules_key' in scope 'iptables_filter' (type: s) in pass 3
 verbose: V: .........................................................
 verbose: V: BEGIN variables (pass 1)
 verbose: V: .........................................................
 verbose: V:     Computing value of "_cache_dir"
 verbose: V:     Computing value of "filter_rules"
 verbose: V: .........................................................
 verbose: V: BEGIN variables (pass 2)
 verbose: V: .........................................................
 verbose: V:     Computing value of "_cache_dir"
 verbose: V:     Computing value of "filter_rules"
 verbose: V: .........................................................
 verbose: V: BEGIN variables (pass 3)
 verbose: V: .........................................................
 verbose: V:     Computing value of "_cache_dir"
 verbose: V:     Computing value of "filter_rules"
 verbose: 
 verbose: A: ...................................................
 verbose: A: Bundle Accounting Summary for 'iptables_filter' in namespace default
 verbose: A: Zero promises executed for bundle 'iptables_filter'
 verbose: A: ...................................................
 verbose: 
 verbose: Additional promise info: source path './main.cf' at line 42 comment 'pass iptables policies and rules (plus rule_key) read in from external file.'
 verbose: Method 'iptables_filter' verified
 verbose: B: *****************************************************************
 verbose: B: END bundle iptables_filter
 verbose: B: *****************************************************************
 verbose: A: Promise was KEPT
 verbose: P: END methods promise (iptables_filter...)
 verbose: P: .........................................................
 verbose: P: BEGIN un-named promise of type "methods" (pass 3)
 verbose: P:    Promiser/affected object: 'iptables_filter'
 verbose: P:    From parameterized bundle: config_iptables( {'forward','@(rule_array)','1000'})
 verbose: P:    Base context class: any
 verbose: P:    Container path : '/default/config_iptables/methods/'iptables_filter'[8]'
 verbose: P:
 verbose: P:    Comment:  pass iptables policies and rules (plus rule_key) read in from external file.
 verbose: P: .........................................................
 verbose: 
 verbose: B: *****************************************************************
 verbose: B: BEGIN bundle iptables_filter( {'forward','@(rule_array)','1000'})
 verbose: B: *****************************************************************
 verbose: V:     +  Private parameter: 'chain_policies' in scope 'iptables_filter' (type: s) in pass 3
 verbose: V:     +  Private parameter: 'rules' in scope 'iptables_filter' (type: s) in pass 3
 verbose: V:     +  Private parameter: 'rules_key' in scope 'iptables_filter' (type: s) in pass 3
 verbose: V: .........................................................
 verbose: V: BEGIN variables (pass 1)
 verbose: V: .........................................................
 verbose: V:     Computing value of "_cache_dir"
 verbose: V:     Computing value of "filter_rules"
 verbose: V: .........................................................
 verbose: V: BEGIN variables (pass 2)
 verbose: V: .........................................................
 verbose: V:     Computing value of "_cache_dir"
 verbose: V:     Computing value of "filter_rules"
 verbose: V: .........................................................
 verbose: V: BEGIN variables (pass 3)
 verbose: V: .........................................................
 verbose: V:     Computing value of "_cache_dir"
 verbose: V:     Computing value of "filter_rules"
 verbose: 
 verbose: A: ...................................................
 verbose: A: Bundle Accounting Summary for 'iptables_filter' in namespace default
 verbose: A: Zero promises executed for bundle 'iptables_filter'
 verbose: A: ...................................................
 verbose: 
 verbose: Additional promise info: source path './main.cf' at line 42 comment 'pass iptables policies and rules (plus rule_key) read in from external file.'
 verbose: Method 'iptables_filter' verified
 verbose: B: *****************************************************************
 verbose: B: END bundle iptables_filter
 verbose: B: *****************************************************************
 verbose: A: Promise was KEPT
 verbose: P: END methods promise (iptables_filter...)
 verbose: P: .........................................................
 verbose: P: BEGIN un-named promise of type "reports" (pass 1)
 verbose: P:    Promiser/affected object: 'config_iptables: Activated'
 verbose: P:    From parameterized bundle: config_iptables( {'/var/cfengine/cache/security/iptables/filter','forward','@(rules)'})
 verbose: P:    Base context class: (inform_mode|verbose_mode)
 verbose: P:    Container path : '/default/config_iptables/reports/'config_iptables: Activated'[0]'
 verbose: P: .........................................................
 verbose: 
R: config_iptables: Activated
 verbose: A: Promise was KEPT
 verbose: P: END reports promise (config_iptables: Activated...)
 verbose: V: .........................................................
 verbose: V: BEGIN variables (pass 2)
 verbose: V: .........................................................
 verbose: V:     Computing value of "iptables_data"
 verbose: V:     Computing value of "chain_policies"
 verbose: V:     Computing value of "rule_array"
 verbose: V:     Computing value of "rule_key"
 verbose: V:     Computing value of "json_str"
 verbose: V: .........................................................
 verbose: V: BEGIN variables (pass 3)
 verbose: V: .........................................................
 verbose: V:     Computing value of "iptables_data"
 verbose: V:     Computing value of "chain_policies"
 verbose: V:     Computing value of "rule_array"
 verbose: V:     Computing value of "rule_key"
 verbose: V:     Computing value of "json_str"
 verbose: 
 verbose: A: ...................................................
 verbose: A: Bundle Accounting Summary for 'config_iptables' in namespace default
 verbose: A: Promises kept in 'config_iptables' = 13
 verbose: A: Promises not kept in 'config_iptables' = 0
 verbose: A: Promises repaired in 'config_iptables' = 6
 verbose: A: Aggregate compliance (promises kept/repaired) for bundle 'config_iptables' = 100.0%
 verbose: A: ...................................................
 verbose: 
 verbose: B: *****************************************************************
 verbose: B: END bundle config_iptables
 verbose: B: *****************************************************************
 verbose: No lock purging scheduled
 verbose: Logging total compliance, total 'Outcome of version (not specified) (agent-0): Promises observed to be kept 76.00%, Promises repaired 24.00%, Promises not repaired 0.00%'
