##############################################################################
#
#   lib/main.cf - EECS library file for generic bundles 
#   Maintained: Ben Roose, ver 0.1
#
###############################################################################

# TESTING ONLY:INPUT STANDARD LIBRARY and HOST CLASSIFICATION (Remove after testing)
body file control
{
      inputs => { "$(sys.libdir)/stdlib.cf",
		  "$(sys.workdir)/inputs/services/eecs/classification/host_role/main.cf" };
}

######################################################################
# Public entry point: 
######################################################################

# NOTES for future development of configuration:
# 1. Make these bundles more generic and use direct input vars rather than "params"

######################################################################

bundle agent dependent_packages_installed(params)
# @description: generic bundle to install a list of dependent packages as found in $(params)[_dependent_packages]
{
  vars:
      "desired_package" slist => { "@($(params)[_dependent_packages])" };


  methods:
      "install desired packages" usebundle => package_latest("$(desired_package)");

  reports:
    (inform_mode|verbose_mode)::
      "$(this.bundle): Activated";

    DEBUG::
      "$(this.bundle): Packages to install: $(desired_package)";

}

######################################################################

bundle agent installation_tarball_is_present(params)
# NOT USED?
# @description: generic bundle to download and unroll a .tar.gz archive file found on the policyhub
{
  classes:
      "tarball_is_present"
        expression => fileexists("$($(params)[_install_dir])$($(params)[_tarball])");

      "src_dir_is_present"
        expression => fileexists("$($(params)[_unrolled_dir])");

  files: 
    !tarball_is_present::
      "$($(params)[_install_dir])$($(params)[_tarball])"
        copy_from => secure_cp("$($(params)[_download_file])", "$($(params)[_download_server])"),
        comment => "Copying installer tarball from source server.";

  commands:
    tarball_is_present.!src_dir_is_present::
      "/bin/tar -xzf $($(params)[_tarball])"
        contain => in_dir_shell("$($(params)[_install_dir])"),
        comment => "Unrolling installer tarball to $($(params)[_install_dir])";

  reports:
    (inform_mode|verbose_mode)::
      "$(this.bundle): Activated";

    DEBUG.tarball_is_present::
      "Installation tarball is on disk.";

    DEBUG.src_dir_is_present::
      "Installation unrolled/untarred directory is present.";
}

######################################################################

bundle agent installation_tidy(params)
# @description: generic bundle to remove downloaded tar.gz files from a custom package install
{
  classes:
      "install_dir_exists"  
        expression => fileexists("$($(params)[_unrolled_dir])");

      "tarball_exists"
        expression => fileexists("$($(params)[_install_dir])$($(params)[_tarball])");

  files:
    install_dir_exists::
      "$($(params)[_unrolled_dir])"
        pathtype => "literal",
        delete => tidy,
        file_select => minutes_old(20),
        depth_search => recurse("inf"),
      #BEN: ADD RESULTS CLASS
        comment => "Remove all files within $($(params)[_unrolled_dir]) created in last 20 minutes.";

      "$($(params)[_unrolled_dir])"
        pathtype => "literal",
        delete => tidy,
        file_select => minutes_old(20),
        depth_search => include_base,
        comment => "Remove the directory $($(params)[_unrolled_dir]).";

    tarball_exists::
      "$($(params)[_install_dir])$($(params)[_tarball])"
        pathtype => "literal",
        delete => tidy,
        comment => "Remove $($(params)[_tarball]).";

  reports:
    (inform_mode|verbose_mode)::
      "$(this.bundle): Activated";

    DEBUG.(!install_dir_exists)::
      "$(this.bundle): Removed installation files: $($(params)[_unrolled_dir])";

    DEBUG.(!tarball_exists)::
      "$(this.bundle): Removed installation files: $($(params)[_tarball])";

}

######################################################################

body file_select minutes_old(min)
{
      mtime       => irange(0,ago(0,0,0,0,"$(min)",0));
      file_result => "mtime";
}

######################################################################
